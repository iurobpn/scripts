!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
$(LANGUAGE_NAME).pc	/home/gagarin/git/scripts/treesitter/Makefile	/^$(LANGUAGE_NAME).pc: bindings\/c\/$(LANGUAGE_NAME).pc.in$/;"	t
$(PARSER)	/home/gagarin/git/scripts/treesitter/Makefile	/^$(PARSER): $(SRC_DIR)\/grammar.json$/;"	t
0	/home/gagarin/git/scripts/lua/.settings.json	/^{"root_files":["root.tex"],"root_priority":["main_root","git","root_files"],"main_root":".root",/;"	s	array:root_files
0	/home/gagarin/git/scripts/lua/.settings.json	/^{"root_files":["root.tex"],"root_priority":["main_root","git","root_files"],"main_root":".root",/;"	s	array:root_priority
0	/home/gagarin/git/scripts/treesitter/package.json	/^    "grammar.js",$/;"	s	array:files
0	/home/gagarin/git/scripts/treesitter/package.json	/^    {$/;"	o	array:tree-sitter
0	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^          {$/;"	o	array:rules.and_expression.content.members
0	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^          {$/;"	o	array:rules.or_expression.content.members
0	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^        {$/;"	o	array:rules.expression.members
0	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^        {$/;"	o	array:rules.parenthesized_expression.members
0	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^    {$/;"	o	array:extras
0	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^        {$/;"	o	array:0.children.types
0	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^        {$/;"	o	array:1.children.types
0	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^        {$/;"	o	array:2.children.types
0	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^        {$/;"	o	array:3.children.types
0	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^  {$/;"	o
1	/home/gagarin/git/scripts/lua/.settings.json	/^{"root_files":["root.tex"],"root_priority":["main_root","git","root_files"],"main_root":".root",/;"	s	array:root_priority
1	/home/gagarin/git/scripts/treesitter/package.json	/^    "binding.gyp",$/;"	s	array:files
1	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^          {$/;"	o	array:rules.and_expression.content.members
1	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^          {$/;"	o	array:rules.or_expression.content.members
1	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^        {$/;"	o	array:rules.expression.members
1	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^        {$/;"	o	array:rules.parenthesized_expression.members
1	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^        {$/;"	o	array:1.children.types
1	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^  {$/;"	o
2	/home/gagarin/git/scripts/lua/.settings.json	/^{"root_files":["root.tex"],"root_priority":["main_root","git","root_files"],"main_root":".root",/;"	s	array:root_priority
2	/home/gagarin/git/scripts/treesitter/package.json	/^    "prebuilds\/**",$/;"	s	array:files
2	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^          {$/;"	o	array:rules.and_expression.content.members
2	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^          {$/;"	o	array:rules.or_expression.content.members
2	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^        {$/;"	o	array:rules.expression.members
2	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^        {$/;"	o	array:rules.parenthesized_expression.members
2	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^        {$/;"	o	array:1.children.types
2	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^  {$/;"	o
3	/home/gagarin/git/scripts/treesitter/package.json	/^    "bindings\/node\/*",$/;"	s	array:files
3	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^        {$/;"	o	array:rules.expression.members
3	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^        {$/;"	o	array:1.children.types
3	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^  {$/;"	o
4	/home/gagarin/git/scripts/treesitter/package.json	/^    "queries\/*",$/;"	s	array:files
4	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^  {$/;"	o
5	/home/gagarin/git/scripts/treesitter/package.json	/^    "src\/**"$/;"	s	array:files
5	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^  {$/;"	o
6	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^  {$/;"	o
7	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^  {$/;"	o
8	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^  {$/;"	o
ACCEPT_INPUT	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^#define ACCEPT_INPUT(/;"	d
ACCEPT_TOKEN	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^#define ACCEPT_TOKEN(/;"	d
ACTIONS	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^#define ACTIONS(/;"	d
ADVANCE	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^#define ADVANCE(/;"	d
ADVANCE_MAP	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^#define ADVANCE_MAP(/;"	d
ALIAS_COUNT	/home/gagarin/git/scripts/treesitter/src/parser.c	/^#define ALIAS_COUNT /;"	d	file:
ARFLAGS	/home/gagarin/git/scripts/treesitter/Makefile	/^ARFLAGS ?= rcs$/;"	m
Array	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define Array(/;"	d
Array	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^typedef Array(void) Array;$/;"	t
BdistWheel	/home/gagarin/git/scripts/treesitter/setup.py	/^class BdistWheel(bdist_wheel):$/;"	c
Buffer.append_lines	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Buffer.append_lines(buf, content)$/;"	f
Buffer.check_content	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Buffer.check_content(content)$/;"	f
Buffer.load	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Buffer.load(buf,filename)$/;"	f
Buffer.mapping_exists	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Buffer.mapping_exists(bufnr, mode, lhs)$/;"	f
Buffer.new	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Buffer.new(listed, scratch)$/;"	f
Buffer.set_lines	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Buffer.set_lines(buf, line_start, line_end, content)$/;"	f
Buffer.set_text	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Buffer.set_text(buf, start_row, start_col, end_row, end_col, content)$/;"	f
Buffer.unmap	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Buffer.unmap(bufnr)$/;"	f
Build	/home/gagarin/git/scripts/treesitter/setup.py	/^class Build(build):$/;"	c
Clock.close	/home/gagarin/git/scripts/lua/dev/nvim/ui/clock.lua	/^function Clock.close()$/;"	f
Clock.open	/home/gagarin/git/scripts/lua/dev/nvim/ui/clock.lua	/^function Clock.open(t)$/;"	f
Clock.toggle	/home/gagarin/git/scripts/lua/dev/nvim/ui/clock.lua	/^function Clock.toggle()$/;"	f
Clock.update	/home/gagarin/git/scripts/lua/dev/nvim/ui/clock.lua	/^function Clock.update(buf, t_period)$/;"	f
Duration.explode	/home/gagarin/git/scripts/lua/duration.lua	/^function Duration.explode(self)$/;"	f
Duration.explode	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Duration.explode(self)$/;"	f
Duration.new	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Duration.new(tf, ti, unit)$/;"	f
Duration.to_sec	/home/gagarin/git/scripts/lua/duration.lua	/^function Duration.to_sec(self)$/;"	f
Duration.to_sec	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Duration.to_sec(self)$/;"	f
Duration.to_string	/home/gagarin/git/scripts/lua/duration.lua	/^function Duration.to_string(self)$/;"	f
Duration.to_string	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Duration.to_string(self)$/;"	f
Duration.to_unit	/home/gagarin/git/scripts/lua/duration.lua	/^function Duration.to_unit(self, unit)$/;"	f
Duration.to_unit	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Duration.to_unit(self, unit)$/;"	f
END_STATE	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^#define END_STATE(/;"	d
EXTERNAL_TOKEN_COUNT	/home/gagarin/git/scripts/treesitter/src/parser.c	/^#define EXTERNAL_TOKEN_COUNT /;"	d	file:
EXTRAS	/home/gagarin/git/scripts/treesitter/Makefile	/^EXTRAS := $(filter-out $(PARSER),$(wildcard $(SRC_DIR)\/*.c))$/;"	m
FIELD_COUNT	/home/gagarin/git/scripts/treesitter/src/parser.c	/^#define FIELD_COUNT /;"	d	file:
Float.clear	/home/gagarin/git/scripts/lua/dev/nvim/ui/window.lua	/^function Float.clear()$/;"	f
Float.close	/home/gagarin/git/scripts/lua/dev/nvim/ui/window.lua	/^function Float.close()$/;"	f
Float.custom_win	/home/gagarin/git/scripts/lua/dev/nvim/ui/window.lua	/^function Float.custom_win(pos,size)$/;"	f
Float.open	/home/gagarin/git/scripts/lua/dev/nvim/ui/window.lua	/^function Float.open()$/;"	f
Float.toggle	/home/gagarin/git/scripts/lua/dev/nvim/ui/window.lua	/^function Float.toggle()$/;"	f
Float.toggle_fullscreen	/home/gagarin/git/scripts/lua/dev/nvim/ui/window.lua	/^function Float.toggle_fullscreen()$/;"	f
GetLuaQuickfix	/home/gagarin/git/scripts/lua/devutils.lua	/^function GetLuaQuickfix(filename)$/;"	f
GetLuaQuickfixFzf	/home/gagarin/git/scripts/lua/devutils.lua	/^function GetLuaQuickfixFzf()$/;"	f
INCLUDEDIR	/home/gagarin/git/scripts/treesitter/Makefile	/^INCLUDEDIR ?= $(PREFIX)\/include$/;"	m
Init	/home/gagarin/git/scripts/treesitter/bindings/node/binding.cc	/^Napi::Object Init(Napi::Env env, Napi::Object exports) {$/;"	f	typeref:typename:Napi::Object
LANGUAGE_NAME	/home/gagarin/git/scripts/treesitter/Makefile	/^LANGUAGE_NAME := tree-sitter-tags_query$/;"	m
LANGUAGE_TYPE_TAG	/home/gagarin/git/scripts/treesitter/bindings/node/binding.cc	/^const napi_type_tag LANGUAGE_TYPE_TAG = {$/;"	v	typeref:typename:const napi_type_tag
LANGUAGE_VERSION	/home/gagarin/git/scripts/treesitter/src/parser.c	/^#define LANGUAGE_VERSION /;"	d	file:
LARGE_STATE_COUNT	/home/gagarin/git/scripts/treesitter/src/parser.c	/^#define LARGE_STATE_COUNT /;"	d	file:
LIBDIR	/home/gagarin/git/scripts/treesitter/Makefile	/^LIBDIR ?= $(PREFIX)\/lib$/;"	m
LINKSHARED	/home/gagarin/git/scripts/treesitter/Makefile	/^	LINKSHARED := $(LINKSHARED)$(ADDITIONAL_LIBS)$/;"	m
LINKSHARED	/home/gagarin/git/scripts/treesitter/Makefile	/^	LINKSHARED := $(LINKSHARED)$(ADDITIONAL_LIBS),$/;"	m
LINKSHARED	/home/gagarin/git/scripts/treesitter/Makefile	/^	LINKSHARED := $(LINKSHARED)-dynamiclib -Wl,$/;"	m
LINKSHARED	/home/gagarin/git/scripts/treesitter/Makefile	/^	LINKSHARED := $(LINKSHARED)-install_name,$(LIBDIR)\/lib$(LANGUAGE_NAME).$(SONAME_MAJOR).dylib,-/;"	m
LINKSHARED	/home/gagarin/git/scripts/treesitter/Makefile	/^	LINKSHARED := $(LINKSHARED)-shared -Wl,$/;"	m
LINKSHARED	/home/gagarin/git/scripts/treesitter/Makefile	/^	LINKSHARED := $(LINKSHARED)-soname,lib$(LANGUAGE_NAME).so.$(SONAME_MAJOR)$/;"	m
Language	/home/gagarin/git/scripts/treesitter/bindings/go/binding.go	/^func Language() unsafe.Pointer {$/;"	f	package:tree_sitter_tags_query	typeref:typename:unsafe.Pointer
Log:debug	/home/gagarin/git/scripts/lua/dev/lua/log.lua	/^function Log:debug(msg)$/;"	f
Log:error	/home/gagarin/git/scripts/lua/dev/lua/log.lua	/^function Log:error(msg)$/;"	f
Log:fatal	/home/gagarin/git/scripts/lua/dev/lua/log.lua	/^function Log:fatal(msg)$/;"	f
Log:format	/home/gagarin/git/scripts/lua/dev/lua/log.lua	/^function Log:format(message, level, color)$/;"	f
Log:info	/home/gagarin/git/scripts/lua/dev/lua/log.lua	/^function Log:info(msg)$/;"	f
Log:print	/home/gagarin/git/scripts/lua/dev/lua/log.lua	/^function Log:print(msg,level)$/;"	f
Log:set_file	/home/gagarin/git/scripts/lua/dev/lua/log.lua	/^function Log:set_file(filename)$/;"	f
Log:trace	/home/gagarin/git/scripts/lua/dev/lua/log.lua	/^function Log:trace(msg)$/;"	f
Log:warn	/home/gagarin/git/scripts/lua/dev/lua/log.lua	/^function Log:warn(msg)$/;"	f
Log:write	/home/gagarin/git/scripts/lua/dev/lua/log.lua	/^function Log:write(msg, level)$/;"	f
M.Thread.join	/home/gagarin/git/scripts/lua/ffithread.lua	/^function M.Thread.join(self)$/;"	f
M.Thread.join	/home/gagarin/git/scripts/lua/lanethreads.lua	/^function M.Thread.join(self)$/;"	f
M.Thread.start	/home/gagarin/git/scripts/lua/ffithread.lua	/^function M.Thread.start(self, ...)$/;"	f
M.Thread.start	/home/gagarin/git/scripts/lua/lanethreads.lua	/^function M.Thread.start(self, ...)$/;"	f
M.pause	/home/gagarin/git/scripts/lua/timer.lua	/^    M.pause = function()$/;"	f
M.start	/home/gagarin/git/scripts/lua/timer.lua	/^    M.start = function()$/;"	f
M.stop	/home/gagarin/git/scripts/lua/timer.lua	/^    M.stop = function()$/;"	f
MAX_ALIAS_SEQUENCE_LENGTH	/home/gagarin/git/scripts/treesitter/src/parser.c	/^#define MAX_ALIAS_SEQUENCE_LENGTH /;"	d	file:
OBJS	/home/gagarin/git/scripts/treesitter/Makefile	/^OBJS := $(patsubst %.c,%.o,$(PARSER) $(EXTRAS))$/;"	m
PARSER	/home/gagarin/git/scripts/treesitter/Makefile	/^PARSER := $(SRC_DIR)\/parser.c$/;"	m
PARSER_REPO_URL	/home/gagarin/git/scripts/treesitter/Makefile	/^PARSER_REPO_URL := $(shell git -C $(SRC_DIR) remote get-url origin 2>\/dev\/null)$/;"	m
PARSER_URL	/home/gagarin/git/scripts/treesitter/Makefile	/^	PARSER_URL := $(subst .git,,$(PARSER_REPO_URL))$/;"	m
PARSER_URL	/home/gagarin/git/scripts/treesitter/Makefile	/^	PARSER_URL := $(subst :,\/,$(PARSER_URL))$/;"	m
PARSER_URL	/home/gagarin/git/scripts/treesitter/Makefile	/^	PARSER_URL := $(subst git@,https:\/\/,$(PARSER_URL))$/;"	m
PCLIBDIR	/home/gagarin/git/scripts/treesitter/Makefile	/^	PCLIBDIR := $(PREFIX)\/libdata\/pkgconfig$/;"	m
PCLIBDIR	/home/gagarin/git/scripts/treesitter/Makefile	/^PCLIBDIR ?= $(LIBDIR)\/pkgconfig$/;"	m
PREFIX	/home/gagarin/git/scripts/treesitter/Makefile	/^PREFIX ?= \/usr\/local$/;"	m
PRODUCTION_ID_COUNT	/home/gagarin/git/scripts/treesitter/src/parser.c	/^#define PRODUCTION_ID_COUNT /;"	d	file:
PyInit__binding	/home/gagarin/git/scripts/treesitter/bindings/python/tree_sitter_tags_query/binding.c	/^PyMODINIT_FUNC PyInit__binding(void) {$/;"	f	typeref:typename:PyMODINIT_FUNC
RECOVER	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^#define RECOVER(/;"	d
REDUCE	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^#define REDUCE(/;"	d
SHIFT	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^#define SHIFT(/;"	d
SHIFT_EXTRA	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^#define SHIFT_EXTRA(/;"	d
SHIFT_REPEAT	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^#define SHIFT_REPEAT(/;"	d
SKIP	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^#define SKIP(/;"	d
SMALL_STATE	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^#define SMALL_STATE(/;"	d
SOEXT	/home/gagarin/git/scripts/treesitter/Makefile	/^	SOEXT = so$/;"	m
SOEXTVER	/home/gagarin/git/scripts/treesitter/Makefile	/^	SOEXTVER = $(SONAME_MAJOR).$(SONAME_MINOR).dylib$/;"	m
SOEXTVER	/home/gagarin/git/scripts/treesitter/Makefile	/^	SOEXTVER = so.$(SONAME_MAJOR).$(SONAME_MINOR)$/;"	m
SOEXTVER_MAJOR	/home/gagarin/git/scripts/treesitter/Makefile	/^	SOEXTVER_MAJOR = $(SONAME_MAJOR).dylib$/;"	m
SOEXTVER_MAJOR	/home/gagarin/git/scripts/treesitter/Makefile	/^	SOEXTVER_MAJOR = so.$(SONAME_MAJOR)$/;"	m
SONAME_MAJOR	/home/gagarin/git/scripts/treesitter/Makefile	/^SONAME_MAJOR := $(word 1,$(subst ., ,$(VERSION)))$/;"	m
SONAME_MINOR	/home/gagarin/git/scripts/treesitter/Makefile	/^SONAME_MINOR := $(word 2,$(subst ., ,$(VERSION)))$/;"	m
SRC_DIR	/home/gagarin/git/scripts/treesitter/Makefile	/^SRC_DIR := src$/;"	m
START_LEXER	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^#define START_LEXER(/;"	d
STATE	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^#define STATE(/;"	d
STATE_COUNT	/home/gagarin/git/scripts/treesitter/src/parser.c	/^#define STATE_COUNT /;"	d	file:
SYMBOL_COUNT	/home/gagarin/git/scripts/treesitter/src/parser.c	/^#define SYMBOL_COUNT /;"	d	file:
Server	/home/gagarin/git/scripts/lua/timer_server.lua	/^Server = class(Server, function(self, ip, port, time_start, name, log_file)$/;"	f
Server:config	/home/gagarin/git/scripts/lua/timer_server.lua	/^function Server:config(id)$/;"	f
Server:get_id	/home/gagarin/git/scripts/lua/timer_server.lua	/^function Server:get_id()$/;"	f
Server:listen	/home/gagarin/git/scripts/lua/timer_server.lua	/^function Server:listen(readable)$/;"	f
Server:new_timer	/home/gagarin/git/scripts/lua/timer_server.lua	/^function Server:new_timer(mode, start_time, duration, func, ...)$/;"	f
Server:parse	/home/gagarin/git/scripts/lua/timer_server.lua	/^function Server:parse(client,data)$/;"	f
Server:pause	/home/gagarin/git/scripts/lua/timer_server.lua	/^function Server:pause(id)$/;"	f
Server:restart	/home/gagarin/git/scripts/lua/timer_server.lua	/^function Server:restart(id)$/;"	f
Server:resume	/home/gagarin/git/scripts/lua/timer_server.lua	/^function Server:resume(id)$/;"	f
Server:select	/home/gagarin/git/scripts/lua/timer_server.lua	/^function Server:select()$/;"	f
Server:send	/home/gagarin/git/scripts/lua/timer_server.lua	/^function Server:send(client, message)$/;"	f
Server:start	/home/gagarin/git/scripts/lua/timer_server.lua	/^function Server:start(ip, port, mode, time_start, duration, func, ...)$/;"	f
Server:stop	/home/gagarin/git/scripts/lua/timer_server.lua	/^function Server:stop(id,client)$/;"	f
Socket:accept	/home/gagarin/git/scripts/lua/socket2.lua	/^function Socket:accept()$/;"	f
Socket:bind	/home/gagarin/git/scripts/lua/socket2.lua	/^function Socket:bind(ip, port)$/;"	f
Socket:close	/home/gagarin/git/scripts/lua/socket2.lua	/^function Socket:close()$/;"	f
Socket:connect	/home/gagarin/git/scripts/lua/socket2.lua	/^function Socket:connect(ip, port)$/;"	f
Socket:getsockname	/home/gagarin/git/scripts/lua/socket2.lua	/^function Socket:getsockname()$/;"	f
Socket:listen	/home/gagarin/git/scripts/lua/socket2.lua	/^function Socket:listen(client)$/;"	f
Socket:receive	/home/gagarin/git/scripts/lua/socket2.lua	/^function Socket:receive()$/;"	f
Socket:select	/home/gagarin/git/scripts/lua/socket2.lua	/^function Socket:select(recvs, sends, timeout)$/;"	f
Socket:send	/home/gagarin/git/scripts/lua/socket2.lua	/^function Socket:send(data)$/;"	f
Socket:settimeout	/home/gagarin/git/scripts/lua/socket2.lua	/^function Socket:settimeout(timeout)$/;"	f
TOKEN_COUNT	/home/gagarin/git/scripts/treesitter/src/parser.c	/^#define TOKEN_COUNT /;"	d	file:
TREE_SITTER_ALLOC_H_	/home/gagarin/git/scripts/treesitter/src/tree_sitter/alloc.h	/^#define TREE_SITTER_ALLOC_H_$/;"	d
TREE_SITTER_ARRAY_H_	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define TREE_SITTER_ARRAY_H_$/;"	d
TREE_SITTER_PARSER_H_	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^#define TREE_SITTER_PARSER_H_$/;"	d
TREE_SITTER_SERIALIZATION_BUFFER_SIZE	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^#define TREE_SITTER_SERIALIZATION_BUFFER_SIZE /;"	d
TREE_SITTER_TAGS_QUERY_H_	/home/gagarin/git/scripts/treesitter/bindings/c/tree-sitter-tags_query.h	/^#define TREE_SITTER_TAGS_QUERY_H_$/;"	d
TREE_SITTER_TAGS_QUERY_H_	/home/gagarin/git/scripts/treesitter/bindings/swift/TreeSitterTagsQuery/tags_query.h	/^#define TREE_SITTER_TAGS_QUERY_H_$/;"	d
TS	/home/gagarin/git/scripts/treesitter/Makefile	/^TS ?= tree-sitter$/;"	m
TSCharacterRange	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^} TSCharacterRange;$/;"	t	typeref:struct:__anonc127a9ab0b08
TSFieldId	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^typedef uint16_t TSFieldId;$/;"	t	typeref:typename:uint16_t
TSFieldMapEntry	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^} TSFieldMapEntry;$/;"	t	typeref:struct:__anonc127a9ab0108
TSFieldMapSlice	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^} TSFieldMapSlice;$/;"	t	typeref:struct:__anonc127a9ab0208
TSLanguage	/home/gagarin/git/scripts/treesitter/bindings/c/tree-sitter-tags_query.h	/^typedef struct TSLanguage TSLanguage;$/;"	t	typeref:struct:TSLanguage
TSLanguage	/home/gagarin/git/scripts/treesitter/bindings/node/binding.cc	/^typedef struct TSLanguage TSLanguage;$/;"	t	typeref:struct:TSLanguage	file:
TSLanguage	/home/gagarin/git/scripts/treesitter/bindings/python/tree_sitter_tags_query/binding.c	/^typedef struct TSLanguage TSLanguage;$/;"	t	typeref:struct:TSLanguage	file:
TSLanguage	/home/gagarin/git/scripts/treesitter/bindings/swift/TreeSitterTagsQuery/tags_query.h	/^typedef struct TSLanguage TSLanguage;$/;"	t	typeref:struct:TSLanguage
TSLanguage	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^struct TSLanguage {$/;"	s
TSLanguage	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^typedef struct TSLanguage TSLanguage;$/;"	t	typeref:struct:TSLanguage
TSLexMode	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^} TSLexMode;$/;"	t	typeref:struct:__anonc127a9ab0808
TSLexer	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^struct TSLexer {$/;"	s
TSLexer	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^typedef struct TSLexer TSLexer;$/;"	t	typeref:struct:TSLexer
TSParseAction	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^} TSParseAction;$/;"	t	typeref:union:__anonc127a9ab050a
TSParseActionEntry	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^} TSParseActionEntry;$/;"	t	typeref:union:__anonc127a9ab090a
TSParseActionType	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^} TSParseActionType;$/;"	t	typeref:enum:__anonc127a9ab0403
TSParseActionTypeAccept	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  TSParseActionTypeAccept,$/;"	e	enum:__anonc127a9ab0403
TSParseActionTypeRecover	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  TSParseActionTypeRecover,$/;"	e	enum:__anonc127a9ab0403
TSParseActionTypeReduce	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  TSParseActionTypeReduce,$/;"	e	enum:__anonc127a9ab0403
TSParseActionTypeShift	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  TSParseActionTypeShift,$/;"	e	enum:__anonc127a9ab0403
TSStateId	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^typedef uint16_t TSStateId;$/;"	t	typeref:typename:uint16_t
TSSymbol	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^typedef uint16_t TSSymbol;$/;"	t	typeref:typename:uint16_t
TSSymbolMetadata	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^} TSSymbolMetadata;$/;"	t	typeref:struct:__anonc127a9ab0308
TS_PUBLIC	/home/gagarin/git/scripts/treesitter/src/parser.c	/^#define TS_PUBLIC$/;"	d	file:
TestCanLoadGrammar	/home/gagarin/git/scripts/treesitter/bindings/go/binding_test.go	/^func TestCanLoadGrammar(t *testing.T) {$/;"	f	package:tree_sitter_tags_query_test
Thread.join	/home/gagarin/git/scripts/lua/thread.lua	/^function Thread.join(self)$/;"	f
Thread.start	/home/gagarin/git/scripts/lua/thread.lua	/^function Thread.start(self, ...)$/;"	f
Timer.duration	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Timer.duration(self)$/;"	f
Timer.explode	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Timer.explode(t)$/;"	f
Timer.get_duration	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Timer.get_duration(self, t2, t1, unit)$/;"	f
Timer.lap	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Timer.lap(self)$/;"	f
Timer.lap_duration	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Timer.lap_duration(self)$/;"	f
Timer.now	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Timer.now()$/;"	f
Timer.print	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Timer.print(self,t)$/;"	f
Timer.reset	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Timer.reset(self)$/;"	f
Timer.run	/home/gagarin/git/scripts/lua/par_timer.lua	/^function Timer.run(self)$/;"	f
Timer.start	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Timer.start(self, t_end)$/;"	f
Timer.start_timer_thread	/home/gagarin/git/scripts/lua/par_timer.lua	/^function Timer.start_timer_thread(self)$/;"	f
Timer.stop	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Timer.stop(self)$/;"	f
Timer.tnow	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Timer.tnow()$/;"	f
Timer.to_ms	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Timer.to_ms(t)$/;"	f
Timer.to_sec	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Timer.to_sec(t)$/;"	f
Timer.to_string	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Timer.to_string(self, t, unit)$/;"	f
Timer.to_unit	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Timer.to_unit(t, unit)$/;"	f
Timer.to_us	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Timer.to_us(t)$/;"	f
Timer.write	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Timer.write(text)$/;"	f
Timer.write_time	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function Timer.write_time(self,time)$/;"	f
Timer:_pause	/home/gagarin/git/scripts/lua/par_timer.lua	/^function Timer:_pause()$/;"	f
Timer:_stop	/home/gagarin/git/scripts/lua/par_timer.lua	/^function Timer:_stop()$/;"	f
Timer:countdown	/home/gagarin/git/scripts/lua/timer_nui.lua	/^function Timer:countdown(time, step, format)$/;"	f
Timer:init	/home/gagarin/git/scripts/lua/timer_nui.lua	/^function Timer:init(popup_options)$/;"	f
Timer:join	/home/gagarin/git/scripts/lua/timer.lua	/^function Timer:join()$/;"	f
Timer:new_timer	/home/gagarin/git/scripts/lua/par_timer.lua	/^function Timer:new_timer(duration, callback)$/;"	f
Timer:pause	/home/gagarin/git/scripts/lua/timer.lua	/^function Timer:pause()$/;"	f
Timer:pause_all	/home/gagarin/git/scripts/lua/par_timer.lua	/^function Timer:pause_all()$/;"	f
Timer:receive	/home/gagarin/git/scripts/lua/timer.lua	/^function Timer:receive()$/;"	f
Timer:restart	/home/gagarin/git/scripts/lua/timer.lua	/^function Timer:restart()$/;"	f
Timer:resume	/home/gagarin/git/scripts/lua/timer.lua	/^function Timer:resume()$/;"	f
Timer:send	/home/gagarin/git/scripts/lua/par_timer.lua	/^function Timer:send(pipe, command, timer_id, duration, callback)$/;"	f
Timer:send	/home/gagarin/git/scripts/lua/timer.lua	/^function Timer:send(msg, noclose)$/;"	f
Timer:start	/home/gagarin/git/scripts/lua/par_timer.lua	/^function Timer:start(duration, callback)$/;"	f
Timer:start	/home/gagarin/git/scripts/lua/timer.lua	/^function Timer:start()$/;"	f
Timer:stop	/home/gagarin/git/scripts/lua/timer.lua	/^function Timer:stop()$/;"	f
Timer:stop_all	/home/gagarin/git/scripts/lua/par_timer.lua	/^function Timer:stop_all()$/;"	f
UNUSED	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^#define UNUSED /;"	d
VERSION	/home/gagarin/git/scripts/treesitter/Makefile	/^VERSION := 0.0.1$/;"	m
Window.close_all	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window.close_all()$/;"	f
Window.down	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window.down()$/;"	f
Window.fullscreen	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window.fullscreen()$/;"	f
Window.get_current	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window.get_current()$/;"	f
Window.get_window	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window.get_window(vid)$/;"	f
Window.is_floating	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window.is_floating(vid)$/;"	f
Window.left	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window.left()$/;"	f
Window.move	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window.move(dx, dy)$/;"	f
Window.new	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window.new(pos, size)$/;"	f
Window.open_current	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window.open_current()$/;"	f
Window.popup	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window.popup(...)$/;"	f
Window.right	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window.right()$/;"	f
Window.set_win	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window.set_win(vid)$/;"	f
Window.snap_down	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window.snap_down()$/;"	f
Window.snap_left	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window.snap_left()$/;"	f
Window.snap_right	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window.snap_right()$/;"	f
Window.snap_up	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window.snap_up()$/;"	f
Window.toggle	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window.toggle()$/;"	f
Window.toggle_fullscreen	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window.toggle_fullscreen()$/;"	f
Window.up	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window.up()$/;"	f
Window:add_map	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window:add_map(mode, keys, cmd, opts)$/;"	f
Window:close	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window:close(vid)$/;"	f
Window:config	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window:config(...)$/;"	f
Window:get_position	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window:get_position()$/;"	f
Window:get_size	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window:get_size()$/;"	f
Window:open	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window:open()$/;"	f
Window:options	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window:options()$/;"	f
Window:params	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window:params()$/;"	f
Window:read	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window:read(filename)$/;"	f
Window:redraw	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window:redraw()$/;"	f
Window:set_position	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window:set_position()$/;"	f
Window:set_size	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window:set_size()$/;"	f
Window:ui_height	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window:ui_height()$/;"	f
Window:ui_width	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function Window:ui_width()$/;"	f
__all__	/home/gagarin/git/scripts/treesitter/bindings/python/tree_sitter_tags_query/__init__.py	/^__all__ = ["language"]$/;"	v
__anonc127a9ab0108	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^typedef struct {$/;"	s
__anonc127a9ab0208	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^typedef struct {$/;"	s
__anonc127a9ab0308	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^typedef struct {$/;"	s
__anonc127a9ab0403	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^typedef enum {$/;"	g
__anonc127a9ab050a	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^typedef union {$/;"	u
__anonc127a9ab0608	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  struct {$/;"	s	union:__anonc127a9ab050a
__anonc127a9ab0708	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  struct {$/;"	s	union:__anonc127a9ab050a
__anonc127a9ab0808	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^typedef struct {$/;"	s
__anonc127a9ab090a	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^typedef union {$/;"	u
__anonc127a9ab0a08	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  struct {$/;"	s	union:__anonc127a9ab090a
__anonc127a9ab0b08	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^typedef struct {$/;"	s
__anonc127a9ab0c08	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  struct {$/;"	s	struct:TSLanguage
_array__assign	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^static inline void _array__assign(Array *self, const Array *other, size_t element_size) {$/;"	f	typeref:typename:void
_array__delete	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^static inline void _array__delete(Array *self) {$/;"	f	typeref:typename:void
_array__erase	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^static inline void _array__erase(Array *self, size_t element_size,$/;"	f	typeref:typename:void
_array__grow	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^static inline void _array__grow(Array *self, uint32_t count, size_t element_size) {$/;"	f	typeref:typename:void
_array__reserve	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^static inline void _array__reserve(Array *self, size_t element_size, uint32_t new_capacity) {$/;"	f	typeref:typename:void
_array__search_sorted	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define _array__search_sorted(/;"	d
_array__splice	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^static inline void _array__splice(Array *self, size_t element_size,$/;"	f	typeref:typename:void
_array__swap	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^static inline void _array__swap(Array *self, Array *other) {$/;"	f	typeref:typename:void
_binding_language	/home/gagarin/git/scripts/treesitter/bindings/python/tree_sitter_tags_query/binding.c	/^static PyObject* _binding_language(PyObject *self, PyObject *args) {$/;"	f	typeref:typename:PyObject *	file:
_compare_int	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define _compare_int(/;"	d
action	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  TSParseAction action;$/;"	m	union:__anonc127a9ab090a	typeref:typename:TSParseAction
advance	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  void (*advance)(TSLexer *, bool);$/;"	m	struct:TSLexer	typeref:typename:void (*)(TSLexer *,bool)
alias_count	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  uint32_t alias_count;$/;"	m	struct:TSLanguage	typeref:typename:uint32_t
alias_map	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  const uint16_t *alias_map;$/;"	m	struct:TSLanguage	typeref:typename:const uint16_t *
alias_sequences	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  const TSSymbol *alias_sequences;$/;"	m	struct:TSLanguage	typeref:typename:const TSSymbol *
all	/home/gagarin/git/scripts/treesitter/Makefile	/^all: lib$(LANGUAGE_NAME).a lib$(LANGUAGE_NAME).$(SOEXT) $(LANGUAGE_NAME).pc$/;"	t
and_expression	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^    "and_expression": {$/;"	o	object:rules
anon_sym_LPAREN	/home/gagarin/git/scripts/treesitter/src/parser.c	/^  anon_sym_LPAREN = 3,$/;"	e	enum:ts_symbol_identifiers	file:
anon_sym_RPAREN	/home/gagarin/git/scripts/treesitter/src/parser.c	/^  anon_sym_RPAREN = 4,$/;"	e	enum:ts_symbol_identifiers	file:
anon_sym_and	/home/gagarin/git/scripts/treesitter/src/parser.c	/^  anon_sym_and = 2,$/;"	e	enum:ts_symbol_identifiers	file:
anon_sym_or	/home/gagarin/git/scripts/treesitter/src/parser.c	/^  anon_sym_or = 1,$/;"	e	enum:ts_symbol_identifiers	file:
argparse	/home/gagarin/git/scripts/lua/utils.lua	/^function argparse(arg)$/;"	f
array_assign	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_assign(/;"	d
array_back	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_back(/;"	d
array_clear	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_clear(/;"	d
array_delete	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_delete(/;"	d
array_elem_size	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_elem_size(/;"	d
array_erase	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_erase(/;"	d
array_extend	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_extend(/;"	d
array_front	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_front(/;"	d
array_get	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_get(/;"	d
array_grow_by	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_grow_by(/;"	d
array_init	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_init(/;"	d
array_insert	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_insert(/;"	d
array_insert_sorted_by	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_insert_sorted_by(/;"	d
array_insert_sorted_with	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_insert_sorted_with(/;"	d
array_new	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_new(/;"	d
array_pop	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_pop(/;"	d
array_push	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_push(/;"	d
array_push_all	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_push_all(/;"	d
array_reserve	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_reserve(/;"	d
array_search_sorted_by	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_search_sorted_by(/;"	d
array_search_sorted_with	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_search_sorted_with(/;"	d
array_splice	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_splice(/;"	d
array_swap	/home/gagarin/git/scripts/treesitter/src/tree_sitter/array.h	/^#define array_swap(/;"	d
author	/home/gagarin/git/scripts/treesitter/package.json	/^  "author": "Iuro Nascimento",$/;"	s
bin	/home/gagarin/git/scripts/treesitter/package-lock.json	/^      "bin": {$/;"	o	object:packages.node_modules/tree-sitter-cli
bt2qfix	/home/gagarin/git/scripts/lua/utils.lua	/^function bt2qfix ()$/;"	f
call	/home/gagarin/git/scripts/lua/test_vararg.lua	/^local call = function(self, ...)$/;"	f
callback	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^            callback = function()$/;"	f
callback	/home/gagarin/git/scripts/lua/ex_partimer.lua	/^local function callback()$/;"	f
child_count	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^    uint8_t child_count;$/;"	m	struct:__anonc127a9ab050a::__anonc127a9ab0708	typeref:typename:uint8_t
child_index	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  uint8_t child_index;$/;"	m	struct:__anonc127a9ab0108	typeref:typename:uint8_t
children	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "children": {$/;"	o	object:0
children	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "children": {$/;"	o	object:1
children	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "children": {$/;"	o	object:2
children	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "children": {$/;"	o	object:3
class	/home/gagarin/git/scripts/lua/class.lua	/^function class(type, ...) -- args have to be put inside a table$/;"	f
clean	/home/gagarin/git/scripts/treesitter/Makefile	/^clean:$/;"	t
client_thread	/home/gagarin/git/scripts/lua/ex_luasocket_threads.lua	/^local function client_thread()$/;"	f
clock.now	/home/gagarin/git/scripts/lua/time.lua	/^    function clock.now()$/;"	f
clock.sleep	/home/gagarin/git/scripts/lua/time.lua	/^    function clock.sleep(seconds)$/;"	f
close_wins	/home/gagarin/git/scripts/lua/dev/nvim/ui/window.lua	/^function close_wins()$/;"	f
co	/home/gagarin/git/scripts/lua/stopwatch.lua	/^        local co = coroutine.wrap(function()$/;"	f
conflicts	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^  "conflicts": [],$/;"	a
constructor	/home/gagarin/git/scripts/lua/dev/lua/log.lua	/^        constructor = function(obj, module, filename)$/;"	f
constructor	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^        constructor = function(self, ...)$/;"	f
constructor	/home/gagarin/git/scripts/lua/duration.lua	/^        constructor = function(obj, type, tf, ti, unit)$/;"	f
constructor	/home/gagarin/git/scripts/lua/ffithread.lua	/^    constructor = function(obj,func)$/;"	f
constructor	/home/gagarin/git/scripts/lua/lanethreads.lua	/^        constructor = function(obj,func)$/;"	f
constructor	/home/gagarin/git/scripts/lua/socket2.lua	/^        constructor = function(self, ip, port, timeout, color)$/;"	f
constructor	/home/gagarin/git/scripts/lua/test.lua	/^    constructor = function(obj, ...)$/;"	f
constructor	/home/gagarin/git/scripts/lua/thread.lua	/^        constructor = function(obj, func)$/;"	f
constructor	/home/gagarin/git/scripts/lua/timer.lua	/^        constructor = function(self, ip, port, name)$/;"	f
constructor	/home/gagarin/git/scripts/lua/timer_server.lua	/^        constructor = function(self, ...)$/;"	f
content	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^      "content": {$/;"	o	object:rules.and_expression
content	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^      "content": {$/;"	o	object:rules.or_expression
count	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^    uint8_t count;$/;"	m	struct:__anonc127a9ab090a::__anonc127a9ab0a08	typeref:typename:uint8_t
create	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^    void *(*create)(void);$/;"	m	struct:TSLanguage::__anonc127a9ab0c08	typeref:typename:void * (*)(void)
dependencies	/home/gagarin/git/scripts/treesitter/package-lock.json	/^      "dependencies": {$/;"	o	object:packages.
dependencies	/home/gagarin/git/scripts/treesitter/package.json	/^  "dependencies": {$/;"	o
description	/home/gagarin/git/scripts/treesitter/package.json	/^  "description": "parse tag expressions to cstruct searchs on notes",$/;"	s
deserialize	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^    void (*deserialize)(void *, const char *, unsigned);$/;"	m	struct:TSLanguage::__anonc127a9ab0c08	typeref:typename:void (*)(void *,const char *,unsigned)
destroy	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^    void (*destroy)(void *);$/;"	m	struct:TSLanguage::__anonc127a9ab0c08	typeref:typename:void (*)(void *)
dev	/home/gagarin/git/scripts/treesitter/package-lock.json	/^      "dev": true,$/;"	b	object:packages.node_modules/tree-sitter-cli
devDependencies	/home/gagarin/git/scripts/treesitter/package-lock.json	/^      "devDependencies": {$/;"	o	object:packages.
devDependencies	/home/gagarin/git/scripts/treesitter/package.json	/^  "devDependencies": {$/;"	o
draw_content	/home/gagarin/git/scripts/lua/timer_nui.lua	/^  local function draw_content(text)$/;"	f
dynamic_precedence	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^    int16_t dynamic_precedence;$/;"	m	struct:__anonc127a9ab050a::__anonc127a9ab0708	typeref:typename:int16_t
end	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  int32_t end;$/;"	m	struct:__anonc127a9ab0b08	typeref:typename:int32_t
engines	/home/gagarin/git/scripts/treesitter/package-lock.json	/^      "engines": {$/;"	o	object:packages.node_modules/tree-sitter-cli
entry	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  } entry;$/;"	m	union:__anonc127a9ab090a	typeref:struct:__anonc127a9ab090a::__anonc127a9ab0a08
eof	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  bool (*eof)(const TSLexer *);$/;"	m	struct:TSLexer	typeref:typename:bool (*)(const TSLexer *)
expression	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^    "expression": {$/;"	o	object:rules
external_lex_state	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  uint16_t external_lex_state;$/;"	m	struct:__anonc127a9ab0808	typeref:typename:uint16_t
external_scanner	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  } external_scanner;$/;"	m	struct:TSLanguage	typeref:struct:TSLanguage::__anonc127a9ab0c08
external_token_count	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  uint32_t external_token_count;$/;"	m	struct:TSLanguage	typeref:typename:uint32_t
externals	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^  "externals": [],$/;"	a
extra	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^    bool extra;$/;"	m	struct:__anonc127a9ab050a::__anonc127a9ab0608	typeref:typename:bool
extras	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^  "extras": [$/;"	a
field_count	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  uint32_t field_count;$/;"	m	struct:TSLanguage	typeref:typename:uint32_t
field_id	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  TSFieldId field_id;$/;"	m	struct:__anonc127a9ab0108	typeref:typename:TSFieldId
field_map_entries	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  const TSFieldMapEntry *field_map_entries;$/;"	m	struct:TSLanguage	typeref:typename:const TSFieldMapEntry *
field_map_slices	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  const TSFieldMapSlice *field_map_slices;$/;"	m	struct:TSLanguage	typeref:typename:const TSFieldMapSlice *
field_names	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  const char * const *field_names;$/;"	m	struct:TSLanguage	typeref:typename:const char * const *
fields	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "fields": {},$/;"	o	object:0
fields	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "fields": {},$/;"	o	object:1
fields	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "fields": {},$/;"	o	object:2
fields	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "fields": {},$/;"	o	object:3
file_exists	/home/gagarin/git/scripts/lua/dev/lua/fs.lua	/^function file_exists(filename)$/;"	f
files	/home/gagarin/git/scripts/treesitter/package.json	/^  "files": [$/;"	a
find_root.git	/home/gagarin/git/scripts/lua/dev/lua/fs.lua	/^function find_root.git()$/;"	f
find_root.main_root	/home/gagarin/git/scripts/lua/dev/lua/fs.lua	/^function find_root.main_root(main_root)$/;"	f
find_root.root_files	/home/gagarin/git/scripts/lua/dev/lua/fs.lua	/^function find_root.root_files(file_list)$/;"	f
foo	/home/gagarin/git/scripts/lua/test_vararg.lua	/^local function foo(...)$/;"	f
func	/home/gagarin/git/scripts/lua/thread.lua	/^    func = function() print('empty function') end,$/;"	f
fzf	/home/gagarin/git/scripts/lua/dev/nvim/search.lua	/^function fzf()$/;"	f
fzf_run	/home/gagarin/git/scripts/lua/dev/nvim/search.lua	/^function fzf_run(arg)$/;"	f
get_column	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  uint32_t (*get_column)(TSLexer *);$/;"	m	struct:TSLexer	typeref:typename:uint32_t (*)(TSLexer *)
get_current_file	/home/gagarin/git/scripts/lua/dev/lua/fs.lua	/^function get_current_file()$/;"	f
get_tag	/home/gagarin/git/scripts/treesitter/setup.py	/^    def get_tag(self):$/;"	m	class:BdistWheel
handle_args	/home/gagarin/git/scripts/lua/class.lua	/^function handle_args(obj, ...)$/;"	f
handle_link	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^function handle_link()$/;"	f
hasInstallScript	/home/gagarin/git/scripts/treesitter/package-lock.json	/^      "hasInstallScript": true,$/;"	b	object:packages.node_modules/tree-sitter-cli
hashtag	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^    "hashtag": {$/;"	o	object:rules
index	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  uint16_t index;$/;"	m	struct:__anonc127a9ab0208	typeref:typename:uint16_t
inherited	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  bool inherited;$/;"	m	struct:__anonc127a9ab0108	typeref:typename:bool
init	/home/gagarin/git/scripts/lua/dev/nvim/ui/init.lua	/^function init()$/;"	f
init	/home/gagarin/git/scripts/lua/dev/nvim/ui/qfloat.lua	/^function init()$/;"	f
injection-regex	/home/gagarin/git/scripts/treesitter/package.json	/^      "injection-regex": "^tags_query$"$/;"	s	object:tree-sitter.0
inline	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^  "inline": [],$/;"	a
inspect	/home/gagarin/git/scripts/lua/utils.lua	/^function inspect(obj,s)$/;"	f
install	/home/gagarin/git/scripts/treesitter/Makefile	/^install: all$/;"	t
install	/home/gagarin/git/scripts/treesitter/package.json	/^    "install": "node-gyp-build",$/;"	s	object:scripts
integrity	/home/gagarin/git/scripts/treesitter/package-lock.json	/^      "integrity": "sha512-\/DdQaPCCOrOYGp9FxGdhFUnHIrjhfbYatQXgNIcmaAOpPunpnDj2vsO\/H+svsfQLaFs/;"	s	object:packages.node_modules/tree-sitter-cli
integrity	/home/gagarin/git/scripts/treesitter/package-lock.json	/^      "integrity": "sha512-bk3gXBZDGILuuo\/6sKtr0DQmSThYHLtNCdSdXk9YkxD\/jK6X2vmCyyXBBxyqZ4XcnzT/;"	s	object:packages.node_modules/nan
is_at_included_range_start	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  bool (*is_at_included_range_start)(const TSLexer *);$/;"	m	struct:TSLexer	typeref:typename:bool (*)(const TSLexer *)
is_quickfix	/home/gagarin/git/scripts/lua/dev/nvim/ui/qfloat.lua	/^function is_quickfix()$/;"	f
keyword_capture_token	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  TSSymbol keyword_capture_token;$/;"	m	struct:TSLanguage	typeref:typename:TSSymbol
keyword_lex_fn	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  bool (*keyword_lex_fn)(TSLexer *, TSStateId);$/;"	m	struct:TSLanguage	typeref:typename:bool (*)(TSLexer *,TSStateId)
language	/home/gagarin/git/scripts/treesitter/bindings/rust/lib.rs	/^pub fn language() -> Language {$/;"	f
large_state_count	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  uint32_t large_state_count;$/;"	m	struct:TSLanguage	typeref:typename:uint32_t
last_file	/home/gagarin/git/scripts/.settings.json	/^{"last_file":".\\\/lua\\\/launch_tserver.lua","package":"qfloat"}/;"	s
last_file	/home/gagarin/git/scripts/lua/.settings.json	/^{"root_files":["root.tex"],"root_priority":["main_root","git","root_files"],"main_root":".root",/;"	s
layout_popup	/home/gagarin/git/scripts/lua/dev/nvim/ui/tests.lua	/^function layout_popup()$/;"	f
length	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  uint16_t length;$/;"	m	struct:__anonc127a9ab0208	typeref:typename:uint16_t
lex_fn	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  bool (*lex_fn)(TSLexer *, TSStateId);$/;"	m	struct:TSLanguage	typeref:typename:bool (*)(TSLexer *,TSStateId)
lex_modes	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  const TSLexMode *lex_modes;$/;"	m	struct:TSLanguage	typeref:typename:const TSLexMode *
lex_state	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  uint16_t lex_state;$/;"	m	struct:__anonc127a9ab0808	typeref:typename:uint16_t
lib$(LANGUAGE_NAME).$(SOEXT)	/home/gagarin/git/scripts/treesitter/Makefile	/^lib$(LANGUAGE_NAME).$(SOEXT): $(OBJS)$/;"	t
lib$(LANGUAGE_NAME).a	/home/gagarin/git/scripts/treesitter/Makefile	/^lib$(LANGUAGE_NAME).a: $(OBJS)$/;"	t
license	/home/gagarin/git/scripts/treesitter/package-lock.json	/^      "license": "ISC",$/;"	s	object:packages.
license	/home/gagarin/git/scripts/treesitter/package-lock.json	/^      "license": "MIT"$/;"	s	object:packages.node_modules/nan
license	/home/gagarin/git/scripts/treesitter/package-lock.json	/^      "license": "MIT",$/;"	s	object:packages.node_modules/tree-sitter-cli
license	/home/gagarin/git/scripts/treesitter/package.json	/^  "license": "ISC",$/;"	s
lockfileVersion	/home/gagarin/git/scripts/treesitter/package-lock.json	/^  "lockfileVersion": 3,$/;"	n
long_running_task	/home/gagarin/git/scripts/lua/uv_timer_tests.lua	/^local function long_running_task()$/;"	f
lookahead	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  int32_t lookahead;$/;"	m	struct:TSLexer	typeref:typename:int32_t
main	/home/gagarin/git/scripts/treesitter/bindings/rust/build.rs	/^fn main() {$/;"	f
main	/home/gagarin/git/scripts/treesitter/package.json	/^  "main": "grammar.js",$/;"	s
main_root	/home/gagarin/git/scripts/lua/.settings.json	/^{"root_files":["root.tex"],"root_priority":["main_root","git","root_files"],"main_root":".root",/;"	s
mark_end	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  void (*mark_end)(TSLexer *);$/;"	m	struct:TSLexer	typeref:typename:void (*)(TSLexer *)
max_alias_sequence_length	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  uint16_t max_alias_sequence_length;$/;"	m	struct:TSLanguage	typeref:typename:uint16_t
members	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^        "members": [$/;"	a	object:rules.and_expression.content
members	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^        "members": [$/;"	a	object:rules.or_expression.content
members	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^      "members": [$/;"	a	object:rules.expression
members	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^      "members": [$/;"	a	object:rules.parenthesized_expression
methods	/home/gagarin/git/scripts/treesitter/bindings/python/tree_sitter_tags_query/binding.c	/^static PyMethodDef methods[] = {$/;"	v	typeref:typename:PyMethodDef[]	file:
module	/home/gagarin/git/scripts/treesitter/bindings/python/tree_sitter_tags_query/binding.c	/^static struct PyModuleDef module = {$/;"	v	typeref:struct:PyModuleDef	file:
mt.__call	/home/gagarin/git/scripts/lua/class.lua	/^    mt.__call = function(Type, ...)$/;"	f
mt.__call	/home/gagarin/git/scripts/lua/dev/lua/fs.lua	/^mt.__call = function(self)$/;"	f
multiple	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^      "multiple": false,$/;"	b	object:1.children
multiple	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^      "multiple": false,$/;"	b	object:3.children
multiple	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^      "multiple": true,$/;"	b	object:0.children
multiple	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^      "multiple": true,$/;"	b	object:2.children
name	/home/gagarin/git/scripts/treesitter/package-lock.json	/^      "name": "tagexpr",$/;"	s	object:packages.
name	/home/gagarin/git/scripts/treesitter/package-lock.json	/^  "name": "tagexpr",$/;"	s
name	/home/gagarin/git/scripts/treesitter/package.json	/^  "name": "tagexpr",$/;"	s
name	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^            "name": "expression"$/;"	s	object:rules.and_expression.content.members.0
name	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^            "name": "expression"$/;"	s	object:rules.and_expression.content.members.2
name	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^            "name": "expression"$/;"	s	object:rules.or_expression.content.members.0
name	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^            "name": "expression"$/;"	s	object:rules.or_expression.content.members.2
name	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^          "name": "and_expression"$/;"	s	object:rules.expression.members.1
name	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^          "name": "expression"$/;"	s	object:rules.parenthesized_expression.members.1
name	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^          "name": "hashtag"$/;"	s	object:rules.expression.members.3
name	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^          "name": "or_expression"$/;"	s	object:rules.expression.members.0
name	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^          "name": "parenthesized_expression"$/;"	s	object:rules.expression.members.2
name	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^  "name": "tags_query",$/;"	s
named	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^          "named": true$/;"	b	object:0.children.types.0
named	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^          "named": true$/;"	b	object:1.children.types.0
named	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^          "named": true$/;"	b	object:1.children.types.1
named	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^          "named": true$/;"	b	object:1.children.types.2
named	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^          "named": true$/;"	b	object:1.children.types.3
named	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^          "named": true$/;"	b	object:2.children.types.0
named	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^          "named": true$/;"	b	object:3.children.types.0
named	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "named": false$/;"	b	object:4
named	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "named": false$/;"	b	object:5
named	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "named": false$/;"	b	object:6
named	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "named": false$/;"	b	object:8
named	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "named": true$/;"	b	object:7
named	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "named": true,$/;"	b	object:0
named	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "named": true,$/;"	b	object:1
named	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "named": true,$/;"	b	object:2
named	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "named": true,$/;"	b	object:3
named	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  bool named;$/;"	m	struct:__anonc127a9ab0308	typeref:typename:bool
nan	/home/gagarin/git/scripts/treesitter/package-lock.json	/^        "nan": "^2.20.0"$/;"	s	object:packages..dependencies
node	/home/gagarin/git/scripts/treesitter/package-lock.json	/^        "node": ">=12.0.0"$/;"	s	object:packages.node_modules/tree-sitter-cli.engines
node-addon-api	/home/gagarin/git/scripts/treesitter/package.json	/^    "node-addon-api": "^7.1.0",$/;"	s	object:dependencies
node-gyp-build	/home/gagarin/git/scripts/treesitter/package.json	/^    "node-gyp-build": "^4.8.0"$/;"	s	object:dependencies
node_modules/nan	/home/gagarin/git/scripts/treesitter/package-lock.json	/^    "node_modules\/nan": {$/;"	o	object:packages
node_modules/tree-sitter-cli	/home/gagarin/git/scripts/treesitter/package-lock.json	/^    "node_modules\/tree-sitter-cli": {$/;"	o	object:packages
numel	/home/gagarin/git/scripts/lua/utils.lua	/^function numel(t)$/;"	f
on_close	/home/gagarin/git/scripts/lua/menu.lua	/^  on_close = function()$/;"	f
on_submit	/home/gagarin/git/scripts/lua/menu.lua	/^  on_submit = function(item)$/;"	f
on_timer	/home/gagarin/git/scripts/lua/thread_ex.lua	/^local function on_timer()$/;"	f
optional	/home/gagarin/git/scripts/treesitter/package.json	/^      "optional": true$/;"	b	object:peerDependenciesMeta.tree_sitter
or_expression	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^    "or_expression": {$/;"	o	object:rules
package	/home/gagarin/git/scripts/.settings.json	/^{"last_file":".\\\/lua\\\/launch_tserver.lua","package":"qfloat"}/;"	s
package	/home/gagarin/git/scripts/lua/.settings.json	/^{"root_files":["root.tex"],"root_priority":["main_root","git","root_files"],"main_root":".root",/;"	s
packages	/home/gagarin/git/scripts/treesitter/package-lock.json	/^  "packages": {$/;"	o
parenthesized_expression	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^    "parenthesized_expression": {$/;"	o	object:rules
parse_actions	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  const TSParseActionEntry *parse_actions;$/;"	m	struct:TSLanguage	typeref:typename:const TSParseActionEntry *
parse_error	/home/gagarin/git/scripts/lua/dev/lua/utils.lua	/^function parse_error(line)$/;"	f
parse_errors	/home/gagarin/git/scripts/lua/dev/lua/utils.lua	/^function parse_errors(lines_list)$/;"	f
parse_table	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  const uint16_t *parse_table;$/;"	m	struct:TSLanguage	typeref:typename:const uint16_t *
peerDependencies	/home/gagarin/git/scripts/treesitter/package.json	/^  "peerDependencies": {$/;"	o
peerDependenciesMeta	/home/gagarin/git/scripts/treesitter/package.json	/^  "peerDependenciesMeta": {$/;"	o
popup	/home/gagarin/git/scripts/lua/dev/nvim/ui/tests.lua	/^function popup(...)$/;"	f
prebuildify	/home/gagarin/git/scripts/treesitter/package.json	/^    "prebuildify": "^6.0.0"$/;"	s	object:devDependencies
prebuildify	/home/gagarin/git/scripts/treesitter/package.json	/^    "prebuildify": "prebuildify --napi --strip"$/;"	s	object:scripts
precedences	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^  "precedences": [],$/;"	a
primary_state_ids	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  const TSStateId *primary_state_ids;$/;"	m	struct:TSLanguage	typeref:typename:const TSStateId *
print_mt	/home/gagarin/git/scripts/lua/utils.lua	/^function print_mt(t)$/;"	f
print_table	/home/gagarin/git/scripts/lua/test_vararg.lua	/^local function print_table(t)$/;"	f
print_table	/home/gagarin/git/scripts/lua/utils.lua	/^function print_table(...)$/;"	f
production_id	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^    uint16_t production_id;$/;"	m	struct:__anonc127a9ab050a::__anonc127a9ab0708	typeref:typename:uint16_t
production_id_count	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  uint32_t production_id_count;$/;"	m	struct:TSLanguage	typeref:typename:uint32_t
public_symbol_map	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  const TSSymbol *public_symbol_map;$/;"	m	struct:TSLanguage	typeref:typename:const TSSymbol *
qclose	/home/gagarin/git/scripts/lua/dev/nvim/ui/qfloat.lua	/^function qclose()$/;"	f
qclose_link	/home/gagarin/git/scripts/lua/dev/nvim/ui/qfloat.lua	/^function qclose_link()$/;"	f
qfile	/home/gagarin/git/scripts/lua/dev/nvim/ui/qfloat.lua	/^function qfile(filename)$/;"	f
qget_link	/home/gagarin/git/scripts/lua/dev/nvim/ui/qfloat.lua	/^function qget_link()$/;"	f
qlink	/home/gagarin/git/scripts/lua/dev/nvim/ui/qfloat.lua	/^function qlink()$/;"	f
qmessage	/home/gagarin/git/scripts/lua/dev/nvim/ui/qfloat.lua	/^function qmessage()$/;"	f
qnext	/home/gagarin/git/scripts/lua/dev/nvim/ui/qfloat.lua	/^function qnext()$/;"	f
qopen	/home/gagarin/git/scripts/lua/dev/nvim/ui/qfloat.lua	/^function qopen()$/;"	f
qprev	/home/gagarin/git/scripts/lua/dev/nvim/ui/qfloat.lua	/^function qprev()$/;"	f
qrun	/home/gagarin/git/scripts/lua/dev/nvim/ui/qfloat.lua	/^function qrun(cmd)$/;"	f
qrun_fzf	/home/gagarin/git/scripts/lua/dev/nvim/ui/qfloat.lua	/^function qrun_fzf()$/;"	f
qrun_lua	/home/gagarin/git/scripts/lua/dev/nvim/ui/qfloat.lua	/^function qrun_lua(filename)$/;"	f
qtoggle	/home/gagarin/git/scripts/lua/dev/nvim/ui/qfloat.lua	/^function qtoggle()$/;"	f
read_output	/home/gagarin/git/scripts/lua/dev/nvim/ui/qfloat.lua	/^function read_output(cmd)$/;"	f
reduce	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  } reduce;$/;"	m	union:__anonc127a9ab050a	typeref:struct:__anonc127a9ab050a::__anonc127a9ab0708
repetition	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^    bool repetition;$/;"	m	struct:__anonc127a9ab050a::__anonc127a9ab0608	typeref:typename:bool
required	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^      "required": true,$/;"	b	object:0.children
required	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^      "required": true,$/;"	b	object:1.children
required	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^      "required": true,$/;"	b	object:2.children
required	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^      "required": true,$/;"	b	object:3.children
requires	/home/gagarin/git/scripts/treesitter/package-lock.json	/^  "requires": true,$/;"	b
resolved	/home/gagarin/git/scripts/treesitter/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/nan\/-\/nan-2.20.0.tgz",$/;"	s	object:packages.node_modules/nan
resolved	/home/gagarin/git/scripts/treesitter/package-lock.json	/^      "resolved": "https:\/\/registry.npmjs.org\/tree-sitter-cli\/-\/tree-sitter-cli-0.23.0.tgz"/;"	s	object:packages.node_modules/tree-sitter-cli
result_symbol	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  TSSymbol result_symbol;$/;"	m	struct:TSLexer	typeref:typename:TSSymbol
reusable	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^    bool reusable;$/;"	m	struct:__anonc127a9ab090a::__anonc127a9ab0a08	typeref:typename:bool
root	/home/gagarin/git/scripts/treesitter/bindings/node/index.js	/^const root = require("path").join(__dirname, "..", "..");$/;"	C
root_dir	/home/gagarin/git/scripts/lua/.settings.json	/^{"root_files":["root.tex"],"root_priority":["main_root","git","root_files"],"main_root":".root",/;"	s
root_files	/home/gagarin/git/scripts/lua/.settings.json	/^{"root_files":["root.tex"],"root_priority":["main_root","git","root_files"],"main_root":".root",/;"	a
root_priority	/home/gagarin/git/scripts/lua/.settings.json	/^{"root_files":["root.tex"],"root_priority":["main_root","git","root_files"],"main_root":".root",/;"	a
rules	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^  "rules": {$/;"	o
run	/home/gagarin/git/scripts/treesitter/setup.py	/^    def run(self):$/;"	m	class:Build
scan	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^    bool (*scan)(void *, TSLexer *, const bool *symbol_whitelist);$/;"	m	struct:TSLanguage::__anonc127a9ab0c08	typeref:typename:bool (*)(void *,TSLexer *,const bool * symbol_whitelist)
scope	/home/gagarin/git/scripts/treesitter/package.json	/^      "scope": "source.tags_query",$/;"	s	object:tree-sitter.0
scripts	/home/gagarin/git/scripts/treesitter/package.json	/^  "scripts": {$/;"	o
self.thread	/home/gagarin/git/scripts/lua/par_timer.lua	/^    self.thread = require('thread').Thread(function(obj)$/;"	f
self.thread	/home/gagarin/git/scripts/lua/timer.lua	/^        self.thread = Thread(function (ip, port, time_start, name, log_level)$/;"	f
serialize	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^    unsigned (*serialize)(void *, char *);$/;"	m	struct:TSLanguage::__anonc127a9ab0c08	typeref:typename:unsigned (*)(void *,char *)
server_thread	/home/gagarin/git/scripts/lua/ex_luasocket_threads.lua	/^local function server_thread()$/;"	f
set_contains	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^static inline bool set_contains(TSCharacterRange *ranges, uint32_t len, int32_t lookahead) {$/;"	f	typeref:typename:bool
set_message_errors	/home/gagarin/git/scripts/lua/dev/lua/utils.lua	/^function set_message_errors()$/;"	f
set_quickfix	/home/gagarin/git/scripts/lua/dev/lua/utils.lua	/^function set_quickfix(lines_str, sep)$/;"	f
settings_file	/home/gagarin/git/scripts/lua/.settings.json	/^{"root_files":["root.tex"],"root_priority":["main_root","git","root_files"],"main_root":".root",/;"	s
setup_buffer_with_links	/home/gagarin/git/scripts/lua/dev/nvim/ui/float.lua	/^local function setup_buffer_with_links()$/;"	f
shift	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  } shift;$/;"	m	union:__anonc127a9ab050a	typeref:struct:__anonc127a9ab050a::__anonc127a9ab0608
sink	/home/gagarin/git/scripts/lua/dev/nvim/search.lua	/^        sink = function(selected)$/;"	f
sink	/home/gagarin/git/scripts/lua/dev/nvim/search.lua	/^    local sink = function(selected)$/;"	f
sink	/home/gagarin/git/scripts/lua/dev/nvim/ui/qfloat.lua	/^    local sink = function(selected)$/;"	f
sink	/home/gagarin/git/scripts/lua/devutils.lua	/^    sink = function(selected)$/;"	f
small_parse_table	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  const uint16_t *small_parse_table;$/;"	m	struct:TSLanguage	typeref:typename:const uint16_t *
small_parse_table_map	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  const uint32_t *small_parse_table_map;$/;"	m	struct:TSLanguage	typeref:typename:const uint32_t *
split	/home/gagarin/git/scripts/lua/utils.lua	/^function split(inputstr, sep)$/;"	f
start	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  int32_t start;$/;"	m	struct:__anonc127a9ab0b08	typeref:typename:int32_t
start_timer	/home/gagarin/git/scripts/lua/thread_ex.lua	/^local function start_timer(timeout_sec, callback)$/;"	f
state	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^    TSStateId state;$/;"	m	struct:__anonc127a9ab050a::__anonc127a9ab0608	typeref:typename:TSStateId
state_count	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  uint32_t state_count;$/;"	m	struct:TSLanguage	typeref:typename:uint32_t
states	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^    const bool *states;$/;"	m	struct:TSLanguage::__anonc127a9ab0c08	typeref:typename:const bool *
supertype	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  bool supertype;$/;"	m	struct:__anonc127a9ab0308	typeref:typename:bool
supertypes	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^  "supertypes": []$/;"	a
sym_and_expression	/home/gagarin/git/scripts/treesitter/src/parser.c	/^  sym_and_expression = 8,$/;"	e	enum:ts_symbol_identifiers	file:
sym_expression	/home/gagarin/git/scripts/treesitter/src/parser.c	/^  sym_expression = 6,$/;"	e	enum:ts_symbol_identifiers	file:
sym_hashtag	/home/gagarin/git/scripts/treesitter/src/parser.c	/^  sym_hashtag = 5,$/;"	e	enum:ts_symbol_identifiers	file:
sym_or_expression	/home/gagarin/git/scripts/treesitter/src/parser.c	/^  sym_or_expression = 7,$/;"	e	enum:ts_symbol_identifiers	file:
sym_parenthesized_expression	/home/gagarin/git/scripts/treesitter/src/parser.c	/^  sym_parenthesized_expression = 9,$/;"	e	enum:ts_symbol_identifiers	file:
symbol	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^    TSSymbol symbol;$/;"	m	struct:__anonc127a9ab050a::__anonc127a9ab0708	typeref:typename:TSSymbol
symbol_count	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  uint32_t symbol_count;$/;"	m	struct:TSLanguage	typeref:typename:uint32_t
symbol_map	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^    const TSSymbol *symbol_map;$/;"	m	struct:TSLanguage::__anonc127a9ab0c08	typeref:typename:const TSSymbol *
symbol_metadata	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  const TSSymbolMetadata *symbol_metadata;$/;"	m	struct:TSLanguage	typeref:typename:const TSSymbolMetadata *
symbol_names	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  const char * const *symbol_names;$/;"	m	struct:TSLanguage	typeref:typename:const char * const *
test	/home/gagarin/git/scripts/treesitter/Makefile	/^test:$/;"	t
test	/home/gagarin/git/scripts/treesitter/package.json	/^    "test": "echo \\"Error: no test specified\\" && exit 1",$/;"	s	object:scripts
test_can_load_grammar	/home/gagarin/git/scripts/treesitter/bindings/rust/lib.rs	/^    fn test_can_load_grammar() {$/;"	f	module:tests
test_popup	/home/gagarin/git/scripts/lua/dev/nvim/ui/tests.lua	/^function test_popup()$/;"	f
test_pos	/home/gagarin/git/scripts/lua/dev/nvim/ui/window.lua	/^function test_pos()$/;"	f
test_window	/home/gagarin/git/scripts/lua/dev/nvim/ui/tests.lua	/^function test_window()$/;"	f
tests	/home/gagarin/git/scripts/treesitter/bindings/rust/lib.rs	/^mod tests {$/;"	n
thread	/home/gagarin/git/scripts/lua/test_thread.lua	/^local thread = Thread(function()$/;"	f
thread	/home/gagarin/git/scripts/lua/thread_ex.lua	/^    local thread = llthreads.new(function(timeout)$/;"	f
thread1	/home/gagarin/git/scripts/lua/ex_pipes_2threads.lua	/^local function thread1(pipe_read, pipe_write)$/;"	f
thread1	/home/gagarin/git/scripts/lua/ex_threads_shared_memory.lua	/^local function thread1()$/;"	f
thread2	/home/gagarin/git/scripts/lua/ex_pipes_2threads.lua	/^local function thread2(pipe_read, pipe_write)$/;"	f
thread2	/home/gagarin/git/scripts/lua/ex_threads_shared_memory.lua	/^local function thread2()$/;"	f
timer.test	/home/gagarin/git/scripts/lua/stopwatch.lua	/^function timer.test()$/;"	f
timer_thread	/home/gagarin/git/scripts/lua/ex_thread_pipe.lua	/^local function timer_thread(pipe_read)$/;"	f
to	/home/gagarin/git/scripts/lua/class.lua	/^            error("Error: function to handle constructor arguments must return self object (retu/;"	f
token_count	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  uint32_t token_count;$/;"	m	struct:TSLanguage	typeref:typename:uint32_t
traceback	/home/gagarin/git/scripts/lua/utils.lua	/^function traceback ()$/;"	f
tree-sitter	/home/gagarin/git/scripts/treesitter/package-lock.json	/^        "tree-sitter": "cli.js"$/;"	s	object:packages.node_modules/tree-sitter-cli.bin
tree-sitter	/home/gagarin/git/scripts/treesitter/package.json	/^    "tree-sitter": "^0.21.0"$/;"	s	object:peerDependencies
tree-sitter	/home/gagarin/git/scripts/treesitter/package.json	/^  "tree-sitter": [$/;"	a
tree-sitter-cli	/home/gagarin/git/scripts/treesitter/package-lock.json	/^        "tree-sitter-cli": "^0.23.0"$/;"	s	object:packages..devDependencies
tree-sitter-cli	/home/gagarin/git/scripts/treesitter/package.json	/^    "tree-sitter-cli": "^0.23.0",$/;"	s	object:devDependencies
tree_sitter	/home/gagarin/git/scripts/treesitter/bindings/go/binding_test.go	/^	tree_sitter "github.com\/smacker\/go-tree-sitter"$/;"	P	package:github.com/smacker/go-tree-sitter
tree_sitter	/home/gagarin/git/scripts/treesitter/package.json	/^    "tree_sitter": {$/;"	o	object:peerDependenciesMeta
tree_sitter_tags_query	/home/gagarin/git/scripts/treesitter/bindings/go/binding.go	/^package tree_sitter_tags_query$/;"	p
tree_sitter_tags_query	/home/gagarin/git/scripts/treesitter/bindings/rust/lib.rs	/^    fn tree_sitter_tags_query() -> Language;$/;"	f
tree_sitter_tags_query	/home/gagarin/git/scripts/treesitter/src/parser.c	/^TS_PUBLIC const TSLanguage *tree_sitter_tags_query(void) {$/;"	f	typeref:typename:TS_PUBLIC const TSLanguage *
tree_sitter_tags_query_test	/home/gagarin/git/scripts/treesitter/bindings/go/binding_test.go	/^package tree_sitter_tags_query_test$/;"	p
ts_alias_sequences	/home/gagarin/git/scripts/treesitter/src/parser.c	/^static const TSSymbol ts_alias_sequences[PRODUCTION_ID_COUNT][MAX_ALIAS_SEQUENCE_LENGTH] = {$/;"	v	typeref:typename:const TSSymbol[][]	file:
ts_builtin_sym_end	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^#define ts_builtin_sym_end /;"	d
ts_builtin_sym_error	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^#define ts_builtin_sym_error /;"	d
ts_calloc	/home/gagarin/git/scripts/treesitter/src/tree_sitter/alloc.h	/^#define ts_calloc /;"	d
ts_free	/home/gagarin/git/scripts/treesitter/src/tree_sitter/alloc.h	/^#define ts_free /;"	d
ts_lex	/home/gagarin/git/scripts/treesitter/src/parser.c	/^static bool ts_lex(TSLexer *lexer, TSStateId state) {$/;"	f	typeref:typename:bool	file:
ts_lex_modes	/home/gagarin/git/scripts/treesitter/src/parser.c	/^static const TSLexMode ts_lex_modes[STATE_COUNT] = {$/;"	v	typeref:typename:const TSLexMode[]	file:
ts_malloc	/home/gagarin/git/scripts/treesitter/src/tree_sitter/alloc.h	/^#define ts_malloc /;"	d
ts_non_terminal_alias_map	/home/gagarin/git/scripts/treesitter/src/parser.c	/^static const uint16_t ts_non_terminal_alias_map[] = {$/;"	v	typeref:typename:const uint16_t[]	file:
ts_parse_actions	/home/gagarin/git/scripts/treesitter/src/parser.c	/^static const TSParseActionEntry ts_parse_actions[] = {$/;"	v	typeref:typename:const TSParseActionEntry[]	file:
ts_parse_table	/home/gagarin/git/scripts/treesitter/src/parser.c	/^static const uint16_t ts_parse_table[LARGE_STATE_COUNT][SYMBOL_COUNT] = {$/;"	v	typeref:typename:const uint16_t[][]	file:
ts_primary_state_ids	/home/gagarin/git/scripts/treesitter/src/parser.c	/^static const TSStateId ts_primary_state_ids[STATE_COUNT] = {$/;"	v	typeref:typename:const TSStateId[]	file:
ts_realloc	/home/gagarin/git/scripts/treesitter/src/tree_sitter/alloc.h	/^#define ts_realloc /;"	d
ts_small_parse_table	/home/gagarin/git/scripts/treesitter/src/parser.c	/^static const uint16_t ts_small_parse_table[] = {$/;"	v	typeref:typename:const uint16_t[]	file:
ts_small_parse_table_map	/home/gagarin/git/scripts/treesitter/src/parser.c	/^static const uint32_t ts_small_parse_table_map[] = {$/;"	v	typeref:typename:const uint32_t[]	file:
ts_symbol_identifiers	/home/gagarin/git/scripts/treesitter/src/parser.c	/^enum ts_symbol_identifiers {$/;"	g	file:
ts_symbol_map	/home/gagarin/git/scripts/treesitter/src/parser.c	/^static const TSSymbol ts_symbol_map[] = {$/;"	v	typeref:typename:const TSSymbol[]	file:
ts_symbol_metadata	/home/gagarin/git/scripts/treesitter/src/parser.c	/^static const TSSymbolMetadata ts_symbol_metadata[] = {$/;"	v	typeref:typename:const TSSymbolMetadata[]	file:
ts_symbol_names	/home/gagarin/git/scripts/treesitter/src/parser.c	/^static const char * const ts_symbol_names[] = {$/;"	v	typeref:typename:const char * const[]	file:
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^            "type": "STRING",$/;"	s	object:rules.and_expression.content.members.1
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^            "type": "STRING",$/;"	s	object:rules.or_expression.content.members.1
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^            "type": "SYMBOL",$/;"	s	object:rules.and_expression.content.members.0
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^            "type": "SYMBOL",$/;"	s	object:rules.and_expression.content.members.2
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^            "type": "SYMBOL",$/;"	s	object:rules.or_expression.content.members.0
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^            "type": "SYMBOL",$/;"	s	object:rules.or_expression.content.members.2
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^          "type": "STRING",$/;"	s	object:rules.parenthesized_expression.members.0
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^          "type": "STRING",$/;"	s	object:rules.parenthesized_expression.members.2
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^          "type": "SYMBOL",$/;"	s	object:rules.expression.members.0
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^          "type": "SYMBOL",$/;"	s	object:rules.expression.members.1
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^          "type": "SYMBOL",$/;"	s	object:rules.expression.members.2
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^          "type": "SYMBOL",$/;"	s	object:rules.expression.members.3
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^          "type": "SYMBOL",$/;"	s	object:rules.parenthesized_expression.members.1
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^        "type": "SEQ",$/;"	s	object:rules.and_expression.content
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^        "type": "SEQ",$/;"	s	object:rules.or_expression.content
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^      "type": "CHOICE",$/;"	s	object:rules.expression
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^      "type": "PATTERN",$/;"	s	object:extras.0
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^      "type": "PATTERN",$/;"	s	object:rules.hashtag
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^      "type": "PREC_LEFT",$/;"	s	object:rules.and_expression
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^      "type": "PREC_LEFT",$/;"	s	object:rules.or_expression
type	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^      "type": "SEQ",$/;"	s	object:rules.parenthesized_expression
type	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^          "type": "and_expression",$/;"	s	object:1.children.types.0
type	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^          "type": "expression",$/;"	s	object:0.children.types.0
type	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^          "type": "expression",$/;"	s	object:2.children.types.0
type	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^          "type": "expression",$/;"	s	object:3.children.types.0
type	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^          "type": "hashtag",$/;"	s	object:1.children.types.1
type	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^          "type": "or_expression",$/;"	s	object:1.children.types.2
type	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^          "type": "parenthesized_expression",$/;"	s	object:1.children.types.3
type	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "type": "(",$/;"	s	object:4
type	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "type": ")",$/;"	s	object:5
type	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "type": "and",$/;"	s	object:6
type	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "type": "and_expression",$/;"	s	object:0
type	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "type": "expression",$/;"	s	object:1
type	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "type": "hashtag",$/;"	s	object:7
type	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "type": "or",$/;"	s	object:8
type	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "type": "or_expression",$/;"	s	object:2
type	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^    "type": "parenthesized_expression",$/;"	s	object:3
type	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^    uint8_t type;$/;"	m	struct:__anonc127a9ab050a::__anonc127a9ab0608	typeref:typename:uint8_t
type	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^    uint8_t type;$/;"	m	struct:__anonc127a9ab050a::__anonc127a9ab0708	typeref:typename:uint8_t
type	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  uint8_t type;$/;"	m	union:__anonc127a9ab050a	typeref:typename:uint8_t
types	/home/gagarin/git/scripts/treesitter/package.json	/^  "types": "bindings\/node",$/;"	s
types	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^      "types": [$/;"	a	object:0.children
types	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^      "types": [$/;"	a	object:1.children
types	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^      "types": [$/;"	a	object:2.children
types	/home/gagarin/git/scripts/treesitter/src/node-types.json	/^      "types": [$/;"	a	object:3.children
uninstall	/home/gagarin/git/scripts/treesitter/Makefile	/^uninstall:$/;"	t
update_time	/home/gagarin/git/scripts/lua/dev/nvim/ui/clock.lua	/^    local function update_time()$/;"	f
update_time	/home/gagarin/git/scripts/lua/dev/nvim/ui/qfloat.lua	/^function update_time(buf)$/;"	f
value	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^            "value": "and"$/;"	s	object:rules.and_expression.content.members.1
value	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^            "value": "or"$/;"	s	object:rules.or_expression.content.members.1
value	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^          "value": "("$/;"	s	object:rules.parenthesized_expression.members.0
value	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^          "value": ")"$/;"	s	object:rules.parenthesized_expression.members.2
value	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^      "value": "#[a-zA-Z_][a-zA-Z0-9_]*"$/;"	s	object:rules.hashtag
value	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^      "value": "\\\\s"$/;"	s	object:extras.0
value	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^      "value": 1,$/;"	n	object:rules.or_expression
value	/home/gagarin/git/scripts/treesitter/src/grammar.json	/^      "value": 2,$/;"	n	object:rules.and_expression
version	/home/gagarin/git/scripts/treesitter/package-lock.json	/^      "version": "0.23.0",$/;"	s	object:packages.node_modules/tree-sitter-cli
version	/home/gagarin/git/scripts/treesitter/package-lock.json	/^      "version": "1.0.0",$/;"	s	object:packages.
version	/home/gagarin/git/scripts/treesitter/package-lock.json	/^      "version": "2.20.0",$/;"	s	object:packages.node_modules/nan
version	/home/gagarin/git/scripts/treesitter/package-lock.json	/^  "version": "1.0.0",$/;"	s
version	/home/gagarin/git/scripts/treesitter/package.json	/^  "version": "1.0.0",$/;"	s
version	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  uint32_t version;$/;"	m	struct:TSLanguage	typeref:typename:uint32_t
visible	/home/gagarin/git/scripts/treesitter/src/tree_sitter/parser.h	/^  bool visible;$/;"	m	struct:__anonc127a9ab0308	typeref:typename:bool
worker	/home/gagarin/git/scripts/lua/ex_lanes.lua	/^local function worker(linda)$/;"	f
