!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
$FZF_DEFAULT_COMMAND	/home/gagarin/git/dotfiles/.vimrc	/^            let $FZF_DEFAULT_COMMAND = 'ag --hidden --ignore .git -g ""'$/;"	v
$FZF_DEFAULT_COMMAND	/home/gagarin/git/dotfiles/.vimrc	/^            let $FZF_DEFAULT_COMMAND = 'rg --files --hidden --follow --glob "!.git\/*"'$/;"	v
&	/home/gagarin/git/dotfiles/.vimrc	/^    nmap & ^$/;"	m
'	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap ' `$/;"	m
,	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <silent> , :noh<CR>$/;"	m
-	/home/gagarin/git/dotfiles/.vimrc	/^        nmap - :FZF<CR>$/;"	m
0	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^                "disable": ["lowercase-global"],$/;"	s	array:settings.Lua.diagnostics.disable
0	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^                "globals": ["hs", "vim", "it", "describe", "before_each", "after_each"],$/;"	s	array:settings.Lua.diagnostics.globals
1	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^                "globals": ["hs", "vim", "it", "describe", "before_each", "after_each"],$/;"	s	array:settings.Lua.diagnostics.globals
2	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^                "globals": ["hs", "vim", "it", "describe", "before_each", "after_each"],$/;"	s	array:settings.Lua.diagnostics.globals
3	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^                "globals": ["hs", "vim", "it", "describe", "before_each", "after_each"],$/;"	s	array:settings.Lua.diagnostics.globals
4	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^                "globals": ["hs", "vim", "it", "describe", "before_each", "after_each"],$/;"	s	array:settings.Lua.diagnostics.globals
5	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^                "globals": ["hs", "vim", "it", "describe", "before_each", "after_each"],$/;"	s	array:settings.Lua.diagnostics.globals
;	/home/gagarin/git/dotfiles/.vimrc	/^    nmap ; :$/;"	m
<A-h>	/home/gagarin/git/dotfiles/.vimrc	/^    inoremap <A-h> <C-\\><C-N><C-w>h$/;"	m
<A-h>	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap <A-h> <C-w>h$/;"	m
<A-j>	/home/gagarin/git/dotfiles/.vimrc	/^    inoremap <A-j> <C-\\><C-N><C-w>j$/;"	m
<A-j>	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap <A-j> <C-w>j$/;"	m
<A-k>	/home/gagarin/git/dotfiles/.vimrc	/^    inoremap <A-k> <C-\\><C-N><C-w>k$/;"	m
<A-k>	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap <A-k> <C-w>k$/;"	m
<A-l>	/home/gagarin/git/dotfiles/.vimrc	/^    inoremap <A-l> <C-\\><C-N><C-w>l$/;"	m
<A-l>	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap <A-l> <C-w>l$/;"	m
<C-Left>	/home/gagarin/git/dotfiles/.vimrc	/^        nnoremap <C-Left>  <ESC>:call MyPrev()<CR>$/;"	m
<C-Right>	/home/gagarin/git/dotfiles/.vimrc	/^        nnoremap <C-Right>  <ESC>:call MyNext()<CR>$/;"	m
<C-S-Down>	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap <C-S-Down> <C-w><Down>$/;"	m
<C-S-Left>	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap <C-S-Left> <ESC>:bprev<CR>$/;"	m
<C-S-Right>	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap <C-S-Right> <ESC>:bnext<CR>$/;"	m
<C-S-Up>	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap <C-S-Up> <C-w><Up>$/;"	m
<C-W>]	/home/gagarin/git/dotfiles/.vimrc	/^        nnoremap <C-W>] <C-W>]:tab split<CR>gT:q<CR>gt$/;"	m
<C-b>	/home/gagarin/git/dotfiles/.vimrc	/^        inoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? "\\<c-r>=coc#float#scroll/;"	m
<C-b>	/home/gagarin/git/dotfiles/.vimrc	/^        nnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\\/;"	m
<C-b>	/home/gagarin/git/dotfiles/.vimrc	/^        vnoremap <silent><nowait><expr> <C-b> coc#float#has_scroll() ? coc#float#scroll(0) : "\\/;"	m
<C-f>	/home/gagarin/git/dotfiles/.vimrc	/^        inoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? "\\<c-r>=coc#float#scroll/;"	m
<C-f>	/home/gagarin/git/dotfiles/.vimrc	/^        nnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\\/;"	m
<C-f>	/home/gagarin/git/dotfiles/.vimrc	/^        vnoremap <silent><nowait><expr> <C-f> coc#float#has_scroll() ? coc#float#scroll(1) : "\\/;"	m
<C-l>c	/home/gagarin/git/dotfiles/.vimrc	/^        nmap <C-l>c :cclose<CR>$/;"	m
<C-l>n	/home/gagarin/git/dotfiles/.vimrc	/^        nmap <C-l>n :cn<CR>$/;"	m
<C-l>o	/home/gagarin/git/dotfiles/.vimrc	/^        nmap <C-l>o :copen<CR>$/;"	m
<C-l>w	/home/gagarin/git/dotfiles/.vimrc	/^        nmap <C-l>w :cwindow<CR>$/;"	m
<C-n>	/home/gagarin/git/dotfiles/.vimrc	/^        map <C-n> <ESC>:pop<CR>$/;"	m
<C-q>	/home/gagarin/git/dotfiles/.vimrc	/^        nnoremap <C-q> <ESC>:tabclose<CR>$/;"	m
<C-s>	/home/gagarin/git/dotfiles/.vimrc	/^        nnoremap <C-s> :A<CR>$/;"	m
<C-s>	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <silent> <C-s> <Plug>(coc-range-select)$/;"	m
<C-s>	/home/gagarin/git/dotfiles/.vimrc	/^    xmap <silent> <C-s> <Plug>(coc-range-select)$/;"	m
<C-t>	/home/gagarin/git/dotfiles/.vimrc	/^        nnoremap <C-t> <ESC>:tabnew<CR>$/;"	m
<CR>	/home/gagarin/git/dotfiles/.vimrc	/^    inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm()$/;"	m
<F10>	/home/gagarin/git/dotfiles/.vimrc	/^        nmap <F10> <ESC>:Dox<CR>$/;"	m
<F12>	/home/gagarin/git/dotfiles/.vimrc	/^        noremap <silent> <F12> <ESC>:Buffers<CR>$/;"	m
<F3>	/home/gagarin/git/dotfiles/.vimrc	/^        nnoremap <silent> <F3> <ESC>:NERDTreeToggle<CR>$/;"	m
<F4>	/home/gagarin/git/dotfiles/.vimrc	/^        nnoremap <silent> <F4> :Vista!!<CR>$/;"	m
<F5>	/home/gagarin/git/dotfiles/.vimrc	/^        nnoremap <silent> <F5> :call ToogleSpell()<CR>$/;"	m
<F6>	/home/gagarin/git/dotfiles/.vimrc	/^        nnoremap <silent> <F6> :Vista finder<CR>$/;"	m
<F7>	/home/gagarin/git/dotfiles/.vimrc	/^    inoremap <F7>  <c-o><F7>$/;"	m
<F7>	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap <F7>  :make<CR>$/;"	m
<F9>	/home/gagarin/git/dotfiles/.vimrc	/^        nmap <F9> <ESC>:DoxAuthor<CR>$/;"	m
<F9>	/home/gagarin/git/dotfiles/.vimrc	/^        noremap <silent> <F9> <ESC>:Explore<CR>$/;"	m
<Leader>ga	/home/gagarin/git/dotfiles/.vimrc	/^        noremap <Leader>ga :Gwrite<CR>$/;"	m
<Leader>gb	/home/gagarin/git/dotfiles/.vimrc	/^        noremap <Leader>gb :Gblame<CR>$/;"	m
<Leader>gc	/home/gagarin/git/dotfiles/.vimrc	/^        noremap <Leader>gc :Gcommit<CR>$/;"	m
<Leader>gd	/home/gagarin/git/dotfiles/.vimrc	/^        noremap <Leader>gd :Gvdiff<CR>$/;"	m
<Leader>gll	/home/gagarin/git/dotfiles/.vimrc	/^        noremap <Leader>gll :Gpull<CR>$/;"	m
<Leader>gr	/home/gagarin/git/dotfiles/.vimrc	/^        noremap <Leader>gr :Gremove<CR>$/;"	m
<Leader>gs	/home/gagarin/git/dotfiles/.vimrc	/^        noremap <Leader>gs :Gstatus<CR>$/;"	m
<Leader>gsh	/home/gagarin/git/dotfiles/.vimrc	/^        noremap <Leader>gsh :Gpush<CR>$/;"	m
<Leader>h	/home/gagarin/git/dotfiles/.vimrc	/^    noremap <Leader>h <ESC>:<C-u>split<CR>$/;"	m
<Leader>v	/home/gagarin/git/dotfiles/.vimrc	/^    noremap <Leader>v <ESC>:<C-u>vsplit<CR>$/;"	m
<Leader>wa	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <Leader>wa :call VimwikiFindAllIncompleteTasks()<CR>$/;"	m
<Leader>wx	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <Leader>wx :call VimwikiFindIncompleteTasks()<CR>$/;"	m
<S-TAB>	/home/gagarin/git/dotfiles/.vimrc	/^    inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : "\\<C-h>"$/;"	m
<TAB>	/home/gagarin/git/dotfiles/.vimrc	/^    inoremap <silent><expr> <TAB>$/;"	m
<c-@>	/home/gagarin/git/dotfiles/.vimrc	/^        inoremap <silent><expr> <c-@> coc#refresh()$/;"	m
<c-space>	/home/gagarin/git/dotfiles/.vimrc	/^        inoremap <silent><expr> <c-space> coc#refresh()$/;"	m
<leader>.	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap <leader>. :lcd %:p:h<CR>$/;"	m
<leader>a	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <leader>a  <Plug>(coc-codeaction-selected)$/;"	m
<leader>a	/home/gagarin/git/dotfiles/.vimrc	/^    noremap <leader>a "+gP<CR>$/;"	m
<leader>a	/home/gagarin/git/dotfiles/.vimrc	/^    xmap <leader>a  <Plug>(coc-codeaction-selected)$/;"	m
<leader>ac	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <leader>ac  <Plug>(coc-codeaction-cursor)$/;"	m
<leader>as	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <leader>as  <Plug>(coc-codeaction-source)$/;"	m
<leader>b	/home/gagarin/git/dotfiles/.vimrc	/^    noremap <leader>b <ESC>:bdelete<CR>$/;"	m
<leader>cl	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <leader>cl  <Plug>(coc-codelens-action)$/;"	m
<leader>cpp	/home/gagarin/git/dotfiles/.vimrc	/^    map <leader>cpp :edit ~\/.vim\/plugged\/vim-snippets\/snippets\/cpp.snippets<CR>$/;"	m
<leader>cpu	/home/gagarin/git/dotfiles/.vimrc	/^    map <leader>cpu :edit ~\/.vim\/plugged\/vim-snippets\/UltiSnips\/cpp.snippets<CR>$/;"	m
<leader>de	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <leader>de :.!date '+\\%A \\%d de \\%B de \\%Y - \\%H:\\%M'<CR>$/;"	m
<leader>dt	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <leader>dt :.!date +\\%T<CR>$/;"	m
<leader>dy	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <leader>dy :.!date '+\\%d\/\\%m\/\\%Y'<CR>$/;"	m
<leader>ea	/home/gagarin/git/dotfiles/.vimrc	/^    noremap <leader>ea :%s\/[ \\t]\\+$\/\/g<CR>``$/;"	m
<leader>el	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <leader>el :s\/[ \\t]\\+$\/\/<CR>$/;"	m
<leader>f	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>f	/home/gagarin/git/dotfiles/.vimrc	/^    xmap <leader>f  <Plug>(coc-format-selected)$/;"	m
<leader>fb	/home/gagarin/git/dotfiles/.vimrc	/^        nmap <leader>fb :Buffers<CR>$/;"	m
<leader>fc	/home/gagarin/git/dotfiles/.vimrc	/^        nmap <leader>fc :Commands<CR>$/;"	m
<leader>ff	/home/gagarin/git/dotfiles/.vimrc	/^        nmap <leader>ff :Files<CR>$/;"	m
<leader>fh	/home/gagarin/git/dotfiles/.vimrc	/^        nmap <leader>fh :History<CR>$/;"	m
<leader>fl	/home/gagarin/git/dotfiles/.vimrc	/^        nmap <leader>fl :BTags<CR>$/;"	m
<leader>fm	/home/gagarin/git/dotfiles/.vimrc	/^        nmap <leader>fm :Maps<CR>$/;"	m
<leader>fs	/home/gagarin/git/dotfiles/.vimrc	/^        nmap <leader>fs :Snippets<CR>$/;"	m
<leader>ft	/home/gagarin/git/dotfiles/.vimrc	/^        nmap <leader>ft :Tags<CR>$/;"	m
<leader>fw	/home/gagarin/git/dotfiles/.vimrc	/^        nmap <leader>fw :Windows<CR>$/;"	m
<leader>fz	/home/gagarin/git/dotfiles/.vimrc	/^        nmap <leader>fz :FZF<CR>$/;"	m
<leader>j	/home/gagarin/git/dotfiles/.vimrc	/^        nnoremap <silent> <leader>j :Rgrep<CR>$/;"	m
<leader>m	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <leader>m :make<CR>$/;"	m
<leader>mp	/home/gagarin/git/dotfiles/.vimrc	/^    noremap <leader>mp :InstantMarkdownPreview<CR>$/;"	m
<leader>ms	/home/gagarin/git/dotfiles/.vimrc	/^    noremap <leader>ms :InstantMarkdownStop<CR>$/;"	m
<leader>pd	/home/gagarin/git/dotfiles/.vimrc	/^    noremap <leader>pd <ESC>iimport ipdb; ipdb.set_trace()<CR>$/;"	m
<leader>qf	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <leader>qf  <Plug>(coc-fix-current)$/;"	m
<leader>r	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <silent> <leader>r  <Plug>(coc-codeaction-refactor-selected)$/;"	m
<leader>r	/home/gagarin/git/dotfiles/.vimrc	/^    xmap <silent> <leader>r  <Plug>(coc-codeaction-refactor-selected)$/;"	m
<leader>re	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <silent> <leader>re <Plug>(coc-codeaction-refactor)$/;"	m
<leader>rn	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <leader>rn <Plug>(coc-rename)$/;"	m
<leader>sg	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap <leader>sg :call BuildGetterSetter()<CR>$/;"	m
<leader>t	/home/gagarin/git/dotfiles/.vimrc	/^            nmap <leader>t :sh<CR>$/;"	m
<leader>t	/home/gagarin/git/dotfiles/.vimrc	/^            nmap <leader>t :terminal<CR>$/;"	m
<leader>u	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <leader>u guu:s\/\\<.\/\\u&\/g<CR>,$/;"	m
<leader>x	/home/gagarin/git/dotfiles/.vimrc	/^    noremap <leader>x "+x<CR>$/;"	m
<leader>y	/home/gagarin/git/dotfiles/.vimrc	/^    noremap <leader>y "+y<CR>$/;"	m
<space>a	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap <silent><nowait> <space>a  :<C-u>CocList diagnostics<cr>$/;"	m
<space>c	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap <silent><nowait> <space>c  :<C-u>CocList commands<cr>$/;"	m
<space>e	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap <silent><nowait> <space>e  :<C-u>CocList extensions<cr>$/;"	m
<space>j	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap <silent><nowait> <space>j  :<C-u>CocNext<CR>$/;"	m
<space>k	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap <silent><nowait> <space>k  :<C-u>CocPrev<CR>$/;"	m
<space>o	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap <silent><nowait> <space>o  :<C-u>CocList outline<cr>$/;"	m
<space>p	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap <silent><nowait> <space>p  :<C-u>CocListResume<CR>$/;"	m
<space>s	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap <silent><nowait> <space>s  :<C-u>CocList -I symbols<cr>$/;"	m
Assembly	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^class Assembly(Dashboard.Module):$/;"	c
Beautifier	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^class Beautifier():$/;"	c
Binary	/home/gagarin/git/dotfiles/.vimrc	/^augroup Binary$/;"	a
Breakpoints	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^class Breakpoints(Dashboard.Module):$/;"	c
BuildGetterSetter	/home/gagarin/git/dotfiles/.vimrc	/^    function! BuildGetterSetter()$/;"	f
ChatGPT.nvim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "ChatGPT.nvim": { "branch": "main", "commit": "4d9d297c2409c8ebc715da7f1d7705a221564555" },$/;"	o
CheckBackspace	/home/gagarin/git/dotfiles/.vimrc	/^    function! CheckBackspace() abort$/;"	f
CheckFileType	/home/gagarin/git/dotfiles/.vimrc	/^    function CheckFileType()$/;"	f
ConfigurationCommand	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    class ConfigurationCommand(gdb.Command):$/;"	c	class:Dashboard
DEFAULT_LENGTH	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    DEFAULT_LENGTH = 16$/;"	v	class:Memory
Dashboard	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^class Dashboard(gdb.Command):$/;"	c
EnabledCommand	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    class EnabledCommand(gdb.Command):$/;"	c	class:Dashboard
Expressions	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^class Expressions(Dashboard.Module):$/;"	c
FancyLayoutCommand	/home/gagarin/git/dotfiles/gdb-dashboard/cpphelpr.py	/^class FancyLayoutCommand(gdb.Command):$/;"	c
Find	/home/gagarin/git/dotfiles/.vimrc	/^            command! -bang -nargs=* Find call fzf#vim#grep('rg --column --line-number --no-headi/;"	c
Fold	/home/gagarin/git/dotfiles/.vimrc	/^    command! -nargs=? Fold :call     CocAction('fold', <f-args>)$/;"	c
Format	/home/gagarin/git/dotfiles/.vimrc	/^    command! -nargs=0 Format :call CocActionAsync('format')$/;"	c
GetAllSnippets	/home/gagarin/git/dotfiles/.config/nvim/lua/config/plugins.lua	/^function GetAllSnippets()$/;"	f
GetAllSnippets	/home/gagarin/git/dotfiles/.vimrc	/^    function! GetAllSnippets()$/;"	f
GetAllSnippets	/home/gagarin/git/dotfiles/lua/config/plugins.lua	/^function GetAllSnippets()$/;"	f
Grep_Default_Options	/home/gagarin/git/dotfiles/.vimrc	/^        let Grep_Default_Options = '-IR'$/;"	v
Grep_Skip_Dirs	/home/gagarin/git/dotfiles/.vimrc	/^        let Grep_Skip_Dirs = '.git node_modules'$/;"	v
Grep_Skip_Files	/home/gagarin/git/dotfiles/.vimrc	/^        let Grep_Skip_Files = '*.log *.db'$/;"	v
History	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^class History(Dashboard.Module):$/;"	c
K	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap <silent> K :call ShowDocumentation()<CR>$/;"	m
LayoutCommand	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    class LayoutCommand(gdb.Command):$/;"	c	class:Dashboard
Lua	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^        "Lua": {$/;"	o	object:settings
MatPrinter	/home/gagarin/git/dotfiles/gdb/arma.py	/^class MatPrinter(gdb.ValuePrinter):$/;"	c
MatPrinter	/home/gagarin/git/dotfiles/gdb/gdb_arma.py	/^class MatPrinter(gdb.ValuePrinter):$/;"	c
Memory	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^class Memory(Dashboard.Module):$/;"	c
Module	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    class Module():$/;"	c	class:Dashboard
ModuleInfo	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    class ModuleInfo:$/;"	c	class:Dashboard
MyNext	/home/gagarin/git/dotfiles/.vimrc	/^    function! MyNext()$/;"	f
MyPrev	/home/gagarin/git/dotfiles/.vimrc	/^    function! MyPrev()$/;"	f
NAMES	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    NAMES = {$/;"	v	class:Breakpoints
OR	/home/gagarin/git/dotfiles/.vimrc	/^    command! -nargs=0 OR   :call     CocActionAsync('runCommand', 'editor.action.organizeImport'/;"	c
OutputCommand	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    class OutputCommand(gdb.Command):$/;"	c	class:Dashboard
R	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^class R():$/;"	c
Region	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    class Region():$/;"	c	class:Memory
Registers	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^class Registers(Dashboard.Module):$/;"	c
ShowDocumentation	/home/gagarin/git/dotfiles/.vimrc	/^    function! ShowDocumentation()$/;"	f
ShowSnippetsInFloatWindow	/home/gagarin/git/dotfiles/.config/nvim/lua/config/plugins.lua	/^function ShowSnippetsInFloatWindow()$/;"	f
ShowSnippetsInFloatWindow	/home/gagarin/git/dotfiles/lua/config/plugins.lua	/^function ShowSnippetsInFloatWindow()$/;"	f
Source	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^class Source(Dashboard.Module):$/;"	c
Stack	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^class Stack(Dashboard.Module):$/;"	c
StyleCommand	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    class StyleCommand(gdb.Command):$/;"	c	class:Dashboard
Threads	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^class Threads(Dashboard.Module):$/;"	c
ToogleSpell	/home/gagarin/git/dotfiles/.config/nvim/lua/config/settings.lua	/^function ToogleSpell()$/;"	f
ToogleSpell	/home/gagarin/git/dotfiles/.vimrc	/^    command ToogleSpell :call ToogleSpell()<CR>$/;"	c
ToogleSpell	/home/gagarin/git/dotfiles/.vimrc	/^    function ToogleSpell()$/;"	f
ToogleSpell	/home/gagarin/git/dotfiles/lua/config/settings.lua	/^function ToogleSpell()$/;"	f
Variables	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^class Variables(Dashboard.Module):$/;"	c
VimwikiFindAllIncompleteTasks	/home/gagarin/git/dotfiles/.vimrc	/^    function! VimwikiFindAllIncompleteTasks()$/;"	f
VimwikiFindIncompleteTasks	/home/gagarin/git/dotfiles/.vimrc	/^    function! VimwikiFindIncompleteTasks()$/;"	f
["<leader>df"]	/home/gagarin/git/dotfiles/.config/nvim/lua/config/nvim-treesitter.lua	/^                    ["<leader>df"] = "@function.outer",$/;"	f
["<leader>df"]	/home/gagarin/git/dotfiles/lua/config/nvim-treesitter.lua	/^                    ["<leader>df"] = "@function.outer",$/;"	f
["[M"]	/home/gagarin/git/dotfiles/.config/nvim/lua/config/nvim-treesitter.lua	/^                    ["[M"] = "@function.outer",$/;"	f
["[M"]	/home/gagarin/git/dotfiles/lua/config/nvim-treesitter.lua	/^                    ["[M"] = "@function.outer",$/;"	f
["[m"]	/home/gagarin/git/dotfiles/.config/nvim/lua/config/nvim-treesitter.lua	/^                    ["[m"] = "@function.outer",$/;"	f
["[m"]	/home/gagarin/git/dotfiles/lua/config/nvim-treesitter.lua	/^                    ["[m"] = "@function.outer",$/;"	f
["]M"]	/home/gagarin/git/dotfiles/.config/nvim/lua/config/nvim-treesitter.lua	/^                    ["]M"] = "@function.outer",$/;"	f
["]M"]	/home/gagarin/git/dotfiles/lua/config/nvim-treesitter.lua	/^                    ["]M"] = "@function.outer",$/;"	f
["]m"]	/home/gagarin/git/dotfiles/.config/nvim/lua/config/nvim-treesitter.lua	/^                    ["]m"] = "@function.outer",$/;"	f
["]m"]	/home/gagarin/git/dotfiles/lua/config/nvim-treesitter.lua	/^                    ["]m"] = "@function.outer",$/;"	f
["af"]	/home/gagarin/git/dotfiles/.config/nvim/lua/config/nvim-treesitter.lua	/^                ["af"] = "@function.outer",$/;"	f
["af"]	/home/gagarin/git/dotfiles/lua/config/nvim-treesitter.lua	/^                ["af"] = "@function.outer",$/;"	f
["if"]	/home/gagarin/git/dotfiles/.config/nvim/lua/config/nvim-treesitter.lua	/^                ["if"] = "@function.inner",$/;"	f
["if"]	/home/gagarin/git/dotfiles/lua/config/nvim-treesitter.lua	/^                ["if"] = "@function.inner",$/;"	f
[g	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <silent> [g <Plug>(coc-diagnostic-prev)$/;"	m
]g	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <silent> ]g <Plug>(coc-diagnostic-next)$/;"	m
]v	/home/gagarin/git/dotfiles/.vimrc	/^        nnoremap <silent> ]v :Vista focus<CR>$/;"	m
_G.check_back_space	/home/gagarin/git/dotfiles/.config/nvim/lua/config/coc.lua	/^function _G.check_back_space()$/;"	f
_G.check_back_space	/home/gagarin/git/dotfiles/lua/config/coc.lua	/^function _G.check_back_space()$/;"	f
_G.show_docs	/home/gagarin/git/dotfiles/.config/nvim/lua/config/coc.lua	/^function _G.show_docs()$/;"	f
_G.show_docs	/home/gagarin/git/dotfiles/lua/config/coc.lua	/^function _G.show_docs()$/;"	f
__init__	/home/gagarin/git/dotfiles/gdb-dashboard/cpphelpr.py	/^    def __init__(self, dashboard):$/;"	m	class:FancyLayoutCommand
__init__	/home/gagarin/git/dotfiles/gdb/arma.py	/^    def __init__(self, val):$/;"	m	class:MatPrinter
__init__	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def __init__(self, dashboard):$/;"	m	class:Dashboard.ConfigurationCommand
__init__	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def __init__(self, dashboard):$/;"	m	class:Dashboard.EnabledCommand
__init__	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def __init__(self, dashboard):$/;"	m	class:Dashboard.LayoutCommand
__init__	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def __init__(self, dashboard, module):$/;"	m	class:Dashboard.ModuleInfo
__init__	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def __init__(self, dashboard, prefix, obj, attributes):$/;"	m	class:Dashboard.StyleCommand
__init__	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def __init__(self, dashboard, prefix=None, obj=None):$/;"	m	class:Dashboard.OutputCommand
__init__	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def __init__(self, expression, length, module):$/;"	m	class:Memory.Region
__init__	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def __init__(self):$/;"	m	class:Assembly
__init__	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def __init__(self):$/;"	m	class:Dashboard
__init__	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def __init__(self):$/;"	m	class:Expressions
__init__	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def __init__(self):$/;"	m	class:Memory
__init__	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def __init__(self):$/;"	m	class:Registers
__init__	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def __init__(self):$/;"	m	class:Source
__init__	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def __init__(self, hint, tab_size=4):$/;"	m	class:Beautifier
__init__	/home/gagarin/git/dotfiles/gdb/gdb_arma.py	/^    def __init__(self, val):$/;"	m	class:MatPrinter
`	/home/gagarin/git/dotfiles/.vimrc	/^    nnoremap ` '$/;"	m
ac	/home/gagarin/git/dotfiles/.vimrc	/^    omap ac <Plug>(coc-classobj-a)$/;"	m
ac	/home/gagarin/git/dotfiles/.vimrc	/^    xmap ac <Plug>(coc-classobj-a)$/;"	m
acquire_buffer_lock	/home/gagarin/git/dotfiles/installer.lua	/^local function acquire_buffer_lock(id, callback)$/;"	f
add_main_command	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def add_main_command(self, dashboard):$/;"	m	class:Dashboard.ModuleInfo
add_output_command	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def add_output_command(self, dashboard):$/;"	m	class:Dashboard.ModuleInfo
add_style_command	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def add_style_command(self, dashboard):$/;"	m	class:Dashboard.ModuleInfo
add_styles	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def add_styles(self):$/;"	m	class:Dashboard.StyleCommand
add_subcommand	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def add_subcommand(self, dashboard, name, command):$/;"	m	class:Dashboard.ModuleInfo
add_subcommands	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def add_subcommands(self, dashboard):$/;"	m	class:Dashboard.ModuleInfo
af	/home/gagarin/git/dotfiles/.vimrc	/^    omap af <Plug>(coc-funcobj-a)$/;"	m
af	/home/gagarin/git/dotfiles/.vimrc	/^    xmap af <Plug>(coc-funcobj-a)$/;"	m
ansi	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^def ansi(string, style):$/;"	f
asms	/home/gagarin/git/dotfiles/.vimrc	/^        augroup asms$/;"	a
asynctasks.vim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "asynctasks.vim": { "branch": "master", "commit": "f54112f6973f1e2b5027c4448888fd466bd3a1ed" }/;"	o
attributes	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def attributes(self):$/;"	m	class:Dashboard.Module
attributes	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def attributes():$/;"	m	class:R
attributes	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def attributes(self):$/;"	m	class:Assembly
attributes	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def attributes(self):$/;"	m	class:Breakpoints
attributes	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def attributes(self):$/;"	m	class:Expressions
attributes	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def attributes(self):$/;"	m	class:History
attributes	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def attributes(self):$/;"	m	class:Memory
attributes	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def attributes(self):$/;"	m	class:Registers
attributes	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def attributes(self):$/;"	m	class:Source
attributes	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def attributes(self):$/;"	m	class:Stack
attributes	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def attributes(self):$/;"	m	class:Threads
attributes	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def attributes(self):$/;"	m	class:Variables
auto-pairs	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "auto-pairs": { "branch": "master", "commit": "39f06b873a8449af8ff6a3eee716d3da14d63a76" },$/;"	o
bg	/home/gagarin/git/dotfiles/.tmux.conf	/^set-option -g status-left "#[fg=colour248, bg=colour241] #S #[fg=colour241, bg=colour237, nobold/;"	k
bg	/home/gagarin/git/dotfiles/.tmux.conf	/^set-option -g status-right "#[fg=colour239, bg=colour237, nobold, nounderscore, noitalics]#[f/;"	k
bg	/home/gagarin/git/dotfiles/.tmux.conf	/^set-window-option -g window-status-current-format "#[fg=colour239, bg=colour248, :nobold, noital/;"	k
bg	/home/gagarin/git/dotfiles/.tmux.conf	/^set-window-option -g window-status-format "#[fg=colour237,bg=colour239,noitalics]#[fg=colour2/;"	k
bm	/home/gagarin/git/dotfiles/gdb/.gdbinit	/^define bm$/;"	d
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "ChatGPT.nvim": { "branch": "main", "commit": "4d9d297c2409c8ebc715da7f1d7705a221564555" },$/;"	s	object:ChatGPT.nvim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "asynctasks.vim": { "branch": "master", "commit": "f54112f6973f1e2b5027c4448888fd466bd3a1ed" }/;"	s	object:asynctasks.vim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "auto-pairs": { "branch": "master", "commit": "39f06b873a8449af8ff6a3eee716d3da14d63a76" },$/;"	s	object:auto-pairs
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "cmake-tools.nvim": { "branch": "master", "commit": "4be3c229fe932043fd83ad52fdf0ba9af7297789"/;"	s	object:cmake-tools.nvim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "coc.nvim": { "branch": "release", "commit": "ae1a5576936f78ae46a51964db1b2293b40ff27f" },$/;"	s	object:coc.nvim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "copilot.vim": { "branch": "release", "commit": "a9fa7946d7307ceb138bfe2706ba75febf6450da" },$/;"	s	object:copilot.vim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "diffview.nvim": { "branch": "main", "commit": "4516612fe98ff56ae0415a259ff6361a89419b0a" },$/;"	s	object:diffview.nvim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "fzf-lua": { "branch": "main", "commit": "9226c5a2291ef623ef157e0e1ffea034ffc8b8de" },$/;"	s	object:fzf-lua
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "fzf.vim": { "branch": "master", "commit": "04bfa8115716f9222fe307303f9803e7264ac303" },$/;"	s	object:fzf.vim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "gitsigns.nvim": { "branch": "main", "commit": "80214a857ce512cc64964abddc1d8eb5a3e28396" },$/;"	s	object:gitsigns.nvim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "gruvbox.nvim": { "branch": "main", "commit": "7a1b23e4edf73a39642e77508ee6b9cbb8c60f9e" },$/;"	s	object:gruvbox.nvim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "indent-blankline.nvim": { "branch": "master", "commit": "db926997af951da38e5004ec7b9fbdc480b4/;"	s	object:indent-blankline.nvim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "lazy.nvim": { "branch": "main", "commit": "077102c5bfc578693f12377846d427f49bc50076" },$/;"	s	object:lazy.nvim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "lua-utils.nvim": { "branch": "main", "commit": "e565749421f4bbb5d2e85e37c3cef9d56553d8bd" },$/;"	s	object:lua-utils.nvim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "neogit": { "branch": "master", "commit": "6af8fc6b03210d0ac99398f8eff27c5be7b2ba8a" },$/;"	s	object:neogit
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "neorg": { "branch": "main", "commit": "81ee90cb2d72ac43bfadb7dd276646f34c8f85be" },$/;"	s	object:neorg
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nui.nvim": { "branch": "main", "commit": "61574ce6e60c815b0a0c4b5655b8486ba58089a1" },$/;"	s	object:nui.nvim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-config-local": { "branch": "main", "commit": "83bb6d9881653a5cf8b489ba8a6fe5a06049a10a" /;"	s	object:nvim-config-local
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-dap": { "branch": "master", "commit": "281a2e4cd1e7a17cea7ecb1745d84a8ab1249925" },$/;"	s	object:nvim-dap
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-dap-ui": { "branch": "master", "commit": "1c351e4e417d4691da12948b6ecf966936a56d28" },$/;"	s	object:nvim-dap-ui
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-nio": { "branch": "master", "commit": "a428f309119086dc78dd4b19306d2d67be884eee" },$/;"	s	object:nvim-nio
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-tree.lua": { "branch": "master", "commit": "ad0b95dee55955817af635fa121f6e2486b10583" },$/;"	s	object:nvim-tree.lua
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-treesitter": { "branch": "master", "commit": "2eb50352c039009cf046f43241b649b162ee5148" /;"	s	object:nvim-treesitter
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-treesitter-context": { "branch": "master", "commit": "0f3332788e0bd37716fbd25f39120dcfd5/;"	s	object:nvim-treesitter-context
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-treesitter-refactor": { "branch": "master", "commit": "65ad2eca822dfaec2a3603119ec3cc882/;"	s	object:nvim-treesitter-refactor
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-treesitter-textobjects": { "branch": "master", "commit": "41e3abf6bfd9a9a681eb1f788bdeba/;"	s	object:nvim-treesitter-textobjects
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-web-devicons": { "branch": "master", "commit": "3722e3d1fb5fe1896a104eb489e8f8651260b520/;"	s	object:nvim-web-devicons
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "obsidian.nvim": { "branch": "main", "commit": "ae1f76a75c7ce36866e1d9342a8f6f5b9c2caf9b" },$/;"	s	object:obsidian.nvim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "overseer.nvim": { "branch": "master", "commit": "236e60cdac6410dd95ea5cecafdb801a304d6a41" },$/;"	s	object:overseer.nvim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "pathlib.nvim": { "branch": "main", "commit": "7a5a6facd29e306bc73a37719fa67c0d2226f852" },$/;"	s	object:pathlib.nvim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "pendulum-nvim": { "branch": "main", "commit": "0fa1a3abce852af9f12f948e8ebada25341e3872" },$/;"	s	object:pendulum-nvim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "pendulum.nvim": { "branch": "main", "commit": "b6b717dbc7dfb424cdd73e049f93a4c8d892a5d2" },$/;"	s	object:pendulum.nvim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "plenary.nvim": { "branch": "master", "commit": "ec289423a1693aeae6cd0d503bac2856af74edaa" },$/;"	s	object:plenary.nvim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "rainbow-delimiters.nvim": { "branch": "master", "commit": "9f3d10e66a79e8975926f8cb930856e493/;"	s	object:rainbow-delimiters.nvim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "tagbar": { "branch": "master", "commit": "d55d454bd3d5b027ebf0e8c75b8f88e4eddad8d8" },$/;"	s	object:tagbar
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "tcomment_vim": { "branch": "master", "commit": "48ab639a461d9b8344f7fee06cb69b4374863b13" },$/;"	s	object:tcomment_vim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "telescope.nvim": { "branch": "master", "commit": "5972437de807c3bc101565175da66a1aa4f8707a" }/;"	s	object:telescope.nvim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "toggleterm.nvim": { "branch": "main", "commit": "48be57eaba817f038d61bbf64d2c597f578c0827" },$/;"	s	object:toggleterm.nvim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "trouble.nvim": { "branch": "main", "commit": "6efc446226679fda0547c0fd6a7892fd5f5b15d8" },$/;"	s	object:trouble.nvim
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "ultisnips": { "branch": "master", "commit": "49dc8cb2086db19d385791c8e1635723b0fd95c7" },$/;"	s	object:ultisnips
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "undotree": { "branch": "master", "commit": "56c684a805fe948936cda0d1b19505b84ad7e065" },$/;"	s	object:undotree
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-airline": { "branch": "master", "commit": "d25c049e617775eb2eb26c580e5dec591c94d480" },$/;"	s	object:vim-airline
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-airline-themes": { "branch": "master", "commit": "a9aa25ce323b2dd04a52706f4d1b044f4feb761/;"	s	object:vim-airline-themes
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-cpp-enhanced-highlight": { "branch": "master", "commit": "4b7314a497ea2dd0a6911ccb94ce83b/;"	s	object:vim-cpp-enhanced-highlight
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-cpp-modern": { "branch": "master", "commit": "6916d2a08c736f806a33cba7752a449ef530549e" }/;"	s	object:vim-cpp-modern
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-easy-align": { "branch": "master", "commit": "9815a55dbcd817784458df7a18acacc6f82b1241" }/;"	s	object:vim-easy-align
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-fugitive": { "branch": "master", "commit": "0444df68cd1cdabc7453d6bd84099458327e5513" },$/;"	s	object:vim-fugitive
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-grepper": { "branch": "master", "commit": "485d349125d46f2788833ecb43df7a14c46706f6" },$/;"	s	object:vim-grepper
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-gutentags": { "branch": "master", "commit": "aa47c5e29c37c52176c44e61c780032dfacef3dd" },$/;"	s	object:vim-gutentags
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-repeat": { "branch": "master", "commit": "65846025c15494983dafe5e3b46c8f88ab2e9635" },$/;"	s	object:vim-repeat
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-snippets": { "branch": "master", "commit": "f0a3184d9f90b96b044d5914625a25c554d7f301" },$/;"	s	object:vim-snippets
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-surround": { "branch": "master", "commit": "3d188ed2113431cf8dac77be61b842acb64433d9" },$/;"	s	object:vim-surround
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vimspector": { "branch": "master", "commit": "af13695a11816c73b92d76fd8721296907224f1d" },$/;"	s	object:vimspector
branch	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vimtex": { "branch": "master", "commit": "76ef99f73a5ff10be59836a4af4f928eaa8ad284" }$/;"	s	object:vimtex
bright_aqua	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string bright_aqua    = "#8ec07c";     \/\/ 108     " 142-192-124$/;"	v	namespace:gruvbox	typeref:typename:std::string
bright_blue	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string bright_blue    = "#83a598";     \/\/ 109     " 131-165-152$/;"	v	namespace:gruvbox	typeref:typename:std::string
bright_green	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string bright_green   = "#b8bb26";     \/\/ 142     " 184-187-38$/;"	v	namespace:gruvbox	typeref:typename:std::string
bright_orange	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string bright_orange  = "#fe8019";     \/\/ 208     " 254-128-25$/;"	v	namespace:gruvbox	typeref:typename:std::string
bright_purple	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string bright_purple  = "#d3869b";     \/\/ 175     " 211-134-155$/;"	v	namespace:gruvbox	typeref:typename:std::string
bright_red	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string bright_red     = "#fb4934";     \/\/ 167     " 251-73-52$/;"	v	namespace:gruvbox	typeref:typename:std::string
bright_yellow	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string bright_yellow  = "#fabd2f";     \/\/ 214     " 250-189-47$/;"	v	namespace:gruvbox	typeref:typename:std::string
build_pretty_printer	/home/gagarin/git/dotfiles/gdb/build.py	/^def build_pretty_printer():$/;"	f
callback	/home/gagarin/git/dotfiles/.config/nvim/lua/config/plugins.lua	/^        callback = function()$/;"	f
callback	/home/gagarin/git/dotfiles/installer.lua	/^                callback = function()$/;"	f
callback	/home/gagarin/git/dotfiles/installer.lua	/^        callback = function()$/;"	f
callback	/home/gagarin/git/dotfiles/lua/config/plugins.lua	/^        callback = function()$/;"	f
checkThirdParty	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^                "checkThirdParty": false,$/;"	b	object:settings.Lua.workspace
check_ge_zero	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^def check_ge_zero(x):$/;"	f
check_gt_zero	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^def check_gt_zero(x):$/;"	f
children	/home/gagarin/git/dotfiles/gdb/arma.py	/^    def children(self):$/;"	m	class:MatPrinter
clear	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def clear(self, arg):$/;"	m	class:Expressions
clear	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def clear(self, arg):$/;"	m	class:Memory
clear_screen	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def clear_screen():$/;"	m	class:Dashboard
cmake-tools.nvim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "cmake-tools.nvim": { "branch": "master", "commit": "4be3c229fe932043fd83ad52fdf0ba9af7297789"/;"	o
cmake_build_directory	/home/gagarin/git/dotfiles/.config/nvim/lua/config/cmake-tools.lua	/^  cmake_build_directory = function()$/;"	f
cmake_build_directory	/home/gagarin/git/dotfiles/lua/config/cmake-tools.lua	/^  cmake_build_directory = function()$/;"	f
coc.nvim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "coc.nvim": { "branch": "release", "commit": "ae1a5576936f78ae46a51964db1b2293b40ff27f" },$/;"	o
commands	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def commands(self):$/;"	m	class:Dashboard.Module
commands	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def commands(self):$/;"	m	class:Assembly
commands	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def commands(self):$/;"	m	class:Expressions
commands	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def commands(self):$/;"	m	class:Memory
commands	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def commands(self):$/;"	m	class:Source
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "ChatGPT.nvim": { "branch": "main", "commit": "4d9d297c2409c8ebc715da7f1d7705a221564555" },$/;"	s	object:ChatGPT.nvim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "asynctasks.vim": { "branch": "master", "commit": "f54112f6973f1e2b5027c4448888fd466bd3a1ed" }/;"	s	object:asynctasks.vim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "auto-pairs": { "branch": "master", "commit": "39f06b873a8449af8ff6a3eee716d3da14d63a76" },$/;"	s	object:auto-pairs
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "cmake-tools.nvim": { "branch": "master", "commit": "4be3c229fe932043fd83ad52fdf0ba9af7297789"/;"	s	object:cmake-tools.nvim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "coc.nvim": { "branch": "release", "commit": "ae1a5576936f78ae46a51964db1b2293b40ff27f" },$/;"	s	object:coc.nvim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "copilot.vim": { "branch": "release", "commit": "a9fa7946d7307ceb138bfe2706ba75febf6450da" },$/;"	s	object:copilot.vim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "diffview.nvim": { "branch": "main", "commit": "4516612fe98ff56ae0415a259ff6361a89419b0a" },$/;"	s	object:diffview.nvim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "fzf-lua": { "branch": "main", "commit": "9226c5a2291ef623ef157e0e1ffea034ffc8b8de" },$/;"	s	object:fzf-lua
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "fzf.vim": { "branch": "master", "commit": "04bfa8115716f9222fe307303f9803e7264ac303" },$/;"	s	object:fzf.vim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "gitsigns.nvim": { "branch": "main", "commit": "80214a857ce512cc64964abddc1d8eb5a3e28396" },$/;"	s	object:gitsigns.nvim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "gruvbox.nvim": { "branch": "main", "commit": "7a1b23e4edf73a39642e77508ee6b9cbb8c60f9e" },$/;"	s	object:gruvbox.nvim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "indent-blankline.nvim": { "branch": "master", "commit": "db926997af951da38e5004ec7b9fbdc480b4/;"	s	object:indent-blankline.nvim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "lazy.nvim": { "branch": "main", "commit": "077102c5bfc578693f12377846d427f49bc50076" },$/;"	s	object:lazy.nvim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "lua-utils.nvim": { "branch": "main", "commit": "e565749421f4bbb5d2e85e37c3cef9d56553d8bd" },$/;"	s	object:lua-utils.nvim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "neogit": { "branch": "master", "commit": "6af8fc6b03210d0ac99398f8eff27c5be7b2ba8a" },$/;"	s	object:neogit
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "neorg": { "branch": "main", "commit": "81ee90cb2d72ac43bfadb7dd276646f34c8f85be" },$/;"	s	object:neorg
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nui.nvim": { "branch": "main", "commit": "61574ce6e60c815b0a0c4b5655b8486ba58089a1" },$/;"	s	object:nui.nvim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-config-local": { "branch": "main", "commit": "83bb6d9881653a5cf8b489ba8a6fe5a06049a10a" /;"	s	object:nvim-config-local
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-dap": { "branch": "master", "commit": "281a2e4cd1e7a17cea7ecb1745d84a8ab1249925" },$/;"	s	object:nvim-dap
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-dap-ui": { "branch": "master", "commit": "1c351e4e417d4691da12948b6ecf966936a56d28" },$/;"	s	object:nvim-dap-ui
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-nio": { "branch": "master", "commit": "a428f309119086dc78dd4b19306d2d67be884eee" },$/;"	s	object:nvim-nio
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-tree.lua": { "branch": "master", "commit": "ad0b95dee55955817af635fa121f6e2486b10583" },$/;"	s	object:nvim-tree.lua
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-treesitter": { "branch": "master", "commit": "2eb50352c039009cf046f43241b649b162ee5148" /;"	s	object:nvim-treesitter
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-treesitter-context": { "branch": "master", "commit": "0f3332788e0bd37716fbd25f39120dcfd5/;"	s	object:nvim-treesitter-context
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-treesitter-refactor": { "branch": "master", "commit": "65ad2eca822dfaec2a3603119ec3cc882/;"	s	object:nvim-treesitter-refactor
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-treesitter-textobjects": { "branch": "master", "commit": "41e3abf6bfd9a9a681eb1f788bdeba/;"	s	object:nvim-treesitter-textobjects
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-web-devicons": { "branch": "master", "commit": "3722e3d1fb5fe1896a104eb489e8f8651260b520/;"	s	object:nvim-web-devicons
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "obsidian.nvim": { "branch": "main", "commit": "ae1f76a75c7ce36866e1d9342a8f6f5b9c2caf9b" },$/;"	s	object:obsidian.nvim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "overseer.nvim": { "branch": "master", "commit": "236e60cdac6410dd95ea5cecafdb801a304d6a41" },$/;"	s	object:overseer.nvim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "pathlib.nvim": { "branch": "main", "commit": "7a5a6facd29e306bc73a37719fa67c0d2226f852" },$/;"	s	object:pathlib.nvim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "pendulum-nvim": { "branch": "main", "commit": "0fa1a3abce852af9f12f948e8ebada25341e3872" },$/;"	s	object:pendulum-nvim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "pendulum.nvim": { "branch": "main", "commit": "b6b717dbc7dfb424cdd73e049f93a4c8d892a5d2" },$/;"	s	object:pendulum.nvim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "plenary.nvim": { "branch": "master", "commit": "ec289423a1693aeae6cd0d503bac2856af74edaa" },$/;"	s	object:plenary.nvim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "rainbow-delimiters.nvim": { "branch": "master", "commit": "9f3d10e66a79e8975926f8cb930856e493/;"	s	object:rainbow-delimiters.nvim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "tagbar": { "branch": "master", "commit": "d55d454bd3d5b027ebf0e8c75b8f88e4eddad8d8" },$/;"	s	object:tagbar
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "tcomment_vim": { "branch": "master", "commit": "48ab639a461d9b8344f7fee06cb69b4374863b13" },$/;"	s	object:tcomment_vim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "telescope.nvim": { "branch": "master", "commit": "5972437de807c3bc101565175da66a1aa4f8707a" }/;"	s	object:telescope.nvim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "toggleterm.nvim": { "branch": "main", "commit": "48be57eaba817f038d61bbf64d2c597f578c0827" },$/;"	s	object:toggleterm.nvim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "trouble.nvim": { "branch": "main", "commit": "6efc446226679fda0547c0fd6a7892fd5f5b15d8" },$/;"	s	object:trouble.nvim
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "ultisnips": { "branch": "master", "commit": "49dc8cb2086db19d385791c8e1635723b0fd95c7" },$/;"	s	object:ultisnips
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "undotree": { "branch": "master", "commit": "56c684a805fe948936cda0d1b19505b84ad7e065" },$/;"	s	object:undotree
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-airline": { "branch": "master", "commit": "d25c049e617775eb2eb26c580e5dec591c94d480" },$/;"	s	object:vim-airline
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-airline-themes": { "branch": "master", "commit": "a9aa25ce323b2dd04a52706f4d1b044f4feb761/;"	s	object:vim-airline-themes
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-cpp-enhanced-highlight": { "branch": "master", "commit": "4b7314a497ea2dd0a6911ccb94ce83b/;"	s	object:vim-cpp-enhanced-highlight
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-cpp-modern": { "branch": "master", "commit": "6916d2a08c736f806a33cba7752a449ef530549e" }/;"	s	object:vim-cpp-modern
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-easy-align": { "branch": "master", "commit": "9815a55dbcd817784458df7a18acacc6f82b1241" }/;"	s	object:vim-easy-align
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-fugitive": { "branch": "master", "commit": "0444df68cd1cdabc7453d6bd84099458327e5513" },$/;"	s	object:vim-fugitive
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-grepper": { "branch": "master", "commit": "485d349125d46f2788833ecb43df7a14c46706f6" },$/;"	s	object:vim-grepper
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-gutentags": { "branch": "master", "commit": "aa47c5e29c37c52176c44e61c780032dfacef3dd" },$/;"	s	object:vim-gutentags
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-repeat": { "branch": "master", "commit": "65846025c15494983dafe5e3b46c8f88ab2e9635" },$/;"	s	object:vim-repeat
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-snippets": { "branch": "master", "commit": "f0a3184d9f90b96b044d5914625a25c554d7f301" },$/;"	s	object:vim-snippets
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-surround": { "branch": "master", "commit": "3d188ed2113431cf8dac77be61b842acb64433d9" },$/;"	s	object:vim-surround
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vimspector": { "branch": "master", "commit": "af13695a11816c73b92d76fd8721296907224f1d" },$/;"	s	object:vimspector
commit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vimtex": { "branch": "master", "commit": "76ef99f73a5ff10be59836a4af4f928eaa8ad284" }$/;"	s	object:vimtex
complete	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def complete(self, text, word):$/;"	m	class:Dashboard.EnabledCommand
complete	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def complete(self, text, word):$/;"	m	class:Dashboard.LayoutCommand
complete	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def complete(word, candidates):$/;"	m	class:Dashboard
completion	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^            "completion": {$/;"	o	object:settings.Lua
config	/home/gagarin/git/dotfiles/.config/nvim/lua/config/lazy.lua	/^        config = function () $/;"	f
config	/home/gagarin/git/dotfiles/.config/nvim/lua/config/lazy.lua	/^        config = function()$/;"	f
config	/home/gagarin/git/dotfiles/lua/config/lazy.lua	/^        config = function () $/;"	f
config	/home/gagarin/git/dotfiles/lua/config/lazy.lua	/^        config = function()$/;"	f
copilot.vim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "copilot.vim": { "branch": "release", "commit": "a9fa7946d7307ceb138bfe2706ba75febf6450da" },$/;"	o
create_body	/home/gagarin/git/dotfiles/installer.lua	/^local function create_body()$/;"	f
create_command	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def create_command(name, invoke, doc, is_prefix, complete=None):$/;"	m	class:Dashboard
create_preview_window	/home/gagarin/git/dotfiles/.config/nvim/lua/config/plugins.lua	/^function create_preview_window(link)$/;"	f
create_preview_window	/home/gagarin/git/dotfiles/lua/config/plugins.lua	/^function create_preview_window(link)$/;"	f
custom_prompt	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def custom_prompt(_):$/;"	f	member:Dashboard.set_custom_prompt	file:
dark0	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string dark0          = "#282828";     \/\/ 235     " 40-40-40$/;"	v	namespace:gruvbox	typeref:typename:std::string
dark0_hard	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string dark0_hard     = "#1d2021";     \/\/ 234     " 29-32-33$/;"	v	namespace:gruvbox	typeref:typename:std::string
dark0_soft	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string dark0_soft     = "#32302f";     \/\/ 236     " 50-48-47$/;"	v	namespace:gruvbox	typeref:typename:std::string
dark1	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string dark1          = "#3c3836";     \/\/ 237     " 60-56-54$/;"	v	namespace:gruvbox	typeref:typename:std::string
dark2	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string dark2          = "#504945";     \/\/ 239     " 80-73-69$/;"	v	namespace:gruvbox	typeref:typename:std::string
dark3	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string dark3          = "#665c54";     \/\/ 241     " 102-92-84$/;"	v	namespace:gruvbox	typeref:typename:std::string
dark4	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string dark4          = "#7c6f64";     \/\/ 243     " 124-111-100$/;"	v	namespace:gruvbox	typeref:typename:std::string
dark4_256	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string dark4_256      = "#7c6f64";     \/\/ 243     " 124-111-100$/;"	v	namespace:gruvbox	typeref:typename:std::string
db	/home/gagarin/git/dotfiles/gdb/.gdbinit	/^define db$/;"	d
dependencies	/home/gagarin/git/dotfiles/:/home/gagarin/.config:/home/gagarin/.config/coc/extensions/package.json	/^{"dependencies":{}}/;"	o
diagnostics	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^            "diagnostics": {$/;"	o	object:settings.Lua
diffview.nvim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "diffview.nvim": { "branch": "main", "commit": "4516612fe98ff56ae0415a259ff6361a89419b0a" },$/;"	o
disable	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^                "disable": ["lowercase-global"],$/;"	a	object:settings.Lua.diagnostics
disable	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def disable(self):$/;"	m	class:Dashboard
display_hint	/home/gagarin/git/dotfiles/gdb/arma.py	/^    def display_hint(self):$/;"	m	class:MatPrinter
display_hint	/home/gagarin/git/dotfiles/gdb/gdb_arma.py	/^    def display_hint(self):$/;"	m	class:MatPrinter
divider	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^def divider(width, label='', primary=False, active=True):$/;"	f
dotfiles	/home/gagarin/git/dotfiles/README.md	/^# dotfiles$/;"	c
dump	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def dump(self, fs):$/;"	m	class:Dashboard.ConfigurationCommand
dump_layout	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def dump_layout(self, fs):$/;"	m	class:Dashboard.ConfigurationCommand
dump_output	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def dump_output(self, fs, obj, prefix='dashboard'):$/;"	m	class:Dashboard.ConfigurationCommand
dump_style	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def dump_style(self, fs, obj, prefix='dashboard'):$/;"	m	class:Dashboard.ConfigurationCommand
enable	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^                "enable": true,$/;"	b	object:settings.Lua.diagnostics
enable	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def enable(self):$/;"	m	class:Dashboard
err	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def err(string):$/;"	m	class:Dashboard
every	/home/gagarin/git/dotfiles/.vimrc	/^    augroup every$/;"	a
expand	/home/gagarin/git/dotfiles/.config/nvim/lua/config/packer.lua	/^      expand = function(args)$/;"	f
expand	/home/gagarin/git/dotfiles/.config/nvim/lua/config/packer.lua	/^    expand = function(args)$/;"	f
expand	/home/gagarin/git/dotfiles/lua/config/packer.lua	/^      expand = function(args)$/;"	f
expand	/home/gagarin/git/dotfiles/lua/config/packer.lua	/^    expand = function(args)$/;"	f
faded_aqua	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string faded_aqua     = "#427b58";     \/\/ 66      " 66-123-88$/;"	v	namespace:gruvbox	typeref:typename:std::string
faded_blue	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string faded_blue     = "#076678";     \/\/ 24      " 7-102-120$/;"	v	namespace:gruvbox	typeref:typename:std::string
faded_green	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string faded_green    = "#79740e";     \/\/ 100     " 121-116-14$/;"	v	namespace:gruvbox	typeref:typename:std::string
faded_orange	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string faded_orange   = "#af3a03";     \/\/ 130     " 175-58-3$/;"	v	namespace:gruvbox	typeref:typename:std::string
faded_purple	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string faded_purple   = "#8f3f71";     \/\/ 96      " 143-63-113$/;"	v	namespace:gruvbox	typeref:typename:std::string
faded_red	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string faded_red      = "#9d0006";     \/\/ 88      " 157-0-6$/;"	v	namespace:gruvbox	typeref:typename:std::string
faded_yellow	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string faded_yellow   = "#b57614";     \/\/ 136     " 181-118-20$/;"	v	namespace:gruvbox	typeref:typename:std::string
feedkeys	/home/gagarin/git/dotfiles/.config/nvim/lua/config/builtin_completion.lua	/^local function feedkeys(keys)$/;"	f
feedkeys	/home/gagarin/git/dotfiles/lua/config/builtin_completion.lua	/^local function feedkeys(keys)$/;"	f
fetch	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def fetch(frame, data, compact, align, sort):$/;"	m	class:Variables
fetch_asm	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def fetch_asm(self, start, end_or_count, relative, highlighter):$/;"	m	class:Assembly
fetch_breakpoints	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^def fetch_breakpoints(watchpoints=False, pending=False):$/;"	f
fetch_function_boundaries	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def fetch_function_boundaries(self):$/;"	m	class:Assembly
fetch_register_list	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def fetch_register_list(*match_groups):$/;"	m	class:Registers
filetypedetect	/home/gagarin/git/dotfiles/.vimrc	/^    augroup filetypedetect$/;"	a
format	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def format(self, per_line):$/;"	m	class:Memory.Region
format_address	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^def format_address(address):$/;"	f
format_byte	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def format_byte(self, byte):$/;"	m	class:Memory
format_frame	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def format_frame(frame, show_arguments, show_locals, compact, align, sort):$/;"	m	class:Variables
format_line	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def format_line(prefix, line):$/;"	m	class:Stack
format_value	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def format_value(value):$/;"	m	class:Registers
format_value	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^def format_value(value, compact=None):$/;"	f
fzf-lua	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "fzf-lua": { "branch": "main", "commit": "9226c5a2291ef623ef157e0e1ffea034ffc8b8de" },$/;"	o
fzf.vim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "fzf.vim": { "branch": "master", "commit": "04bfa8115716f9222fe307303f9803e7264ac303" },$/;"	o
g:AutoPairs	/home/gagarin/git/dotfiles/.vimrc	/^    let g:AutoPairs = {'(':')', '[':']', '{':'}',"'":"'",'"':'"', '`':'`', '$':'$'}$/;"	v
g:CSApprox_loaded	/home/gagarin/git/dotfiles/.vimrc	/^    let g:CSApprox_loaded = 1$/;"	v
g:NERDTreeChDirMode	/home/gagarin/git/dotfiles/.vimrc	/^        let g:NERDTreeChDirMode=2$/;"	v
g:NERDTreeIgnore	/home/gagarin/git/dotfiles/.vimrc	/^        let g:NERDTreeIgnore=['\\.rbc$', '\\~$', '\\.pyc$', '\\.db$', '\\.sqlite$', '__pycache__/;"	v
g:NERDTreeMapOpenInTabSilent	/home/gagarin/git/dotfiles/.vimrc	/^        let g:NERDTreeMapOpenInTabSilent = '<RightMouse>'$/;"	v
g:NERDTreeShowBookmarks	/home/gagarin/git/dotfiles/.vimrc	/^        let g:NERDTreeShowBookmarks=1$/;"	v
g:NERDTreeSortOrder	/home/gagarin/git/dotfiles/.vimrc	/^        let g:NERDTreeSortOrder=['^__\\.py$', '\\\/$', '*', '\\.swp$', '\\.bak$', '\\~$']$/;"	v
g:NERDTreeWinSize	/home/gagarin/git/dotfiles/.vimrc	/^        let g:NERDTreeWinSize = 50$/;"	v
g:UltiSnipsEditSplit	/home/gagarin/git/dotfiles/.vimrc	/^    let g:UltiSnipsEditSplit="vertical"$/;"	v
g:UltiSnipsExpandTrigger	/home/gagarin/git/dotfiles/.vimrc	/^    let g:UltiSnipsExpandTrigger="<tab>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	/home/gagarin/git/dotfiles/.vimrc	/^    let g:UltiSnipsJumpBackwardTrigger="<c-b>"$/;"	v
g:UltiSnipsJumpForwardTrigger	/home/gagarin/git/dotfiles/.vimrc	/^    let g:UltiSnipsJumpForwardTrigger="<tab>"$/;"	v
g:UltiSnipsListSnippets	/home/gagarin/git/dotfiles/.vimrc	/^    let g:UltiSnipsListSnippets = "<c-tab>"$/;"	v
g:UltiSnipsSnippetDirectories	/home/gagarin/git/dotfiles/.vimrc	/^    let g:UltiSnipsSnippetDirectories=['UltiSnips']$/;"	v
g:UltiSnipsSnippetsDir	/home/gagarin/git/dotfiles/.vimrc	/^    let g:UltiSnipsSnippetsDir="~\/.vim\/UltiSnips\/"$/;"	v
g:UltiSnipsUsePythonVersion	/home/gagarin/git/dotfiles/.vimrc	/^    let g:UltiSnipsUsePythonVersion = 3$/;"	v
g:ackprg	/home/gagarin/git/dotfiles/.vimrc	/^            let g:ackprg = 'ag --vimgrep --smart-case'$/;"	v
g:airline#extensions#ale#enabled	/home/gagarin/git/dotfiles/.vimrc	/^        let g:airline#extensions#ale#enabled = 1$/;"	v
g:airline#extensions#branch#enabled	/home/gagarin/git/dotfiles/.vimrc	/^        let g:airline#extensions#branch#enabled = 1$/;"	v
g:airline#extensions#branch#prefix	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline#extensions#branch#prefix     = '⤴' "➔, ➥, ⎇$/;"	v
g:airline#extensions#linecolumn#prefix	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline#extensions#linecolumn#prefix = '¶'$/;"	v
g:airline#extensions#paste#symbol	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline#extensions#paste#symbol      = 'ρ'$/;"	v
g:airline#extensions#readonly#symbol	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline#extensions#readonly#symbol   = '⊘'$/;"	v
g:airline#extensions#syntastic#enabled	/home/gagarin/git/dotfiles/.vimrc	/^        let g:airline#extensions#syntastic#enabled = 1$/;"	v
g:airline#extensions#tabline#enabled	/home/gagarin/git/dotfiles/.vimrc	/^        let g:airline#extensions#tabline#enabled = 1$/;"	v
g:airline#extensions#tabline#formatter	/home/gagarin/git/dotfiles/.vimrc	/^        let g:airline#extensions#tabline#formatter = 'unique_tail'$/;"	v
g:airline#extensions#tabline#left_alt_sep	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline#extensions#tabline#left_alt_sep = '|'$/;"	v
g:airline#extensions#tabline#left_alt_sep	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline#extensions#tabline#left_alt_sep = ''$/;"	v
g:airline#extensions#tabline#left_alt_sep	/home/gagarin/git/dotfiles/.vimrc	/^        let g:airline#extensions#tabline#left_alt_sep = '|'$/;"	v
g:airline#extensions#tabline#left_sep	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline#extensions#tabline#left_sep = ' '$/;"	v
g:airline#extensions#tabline#left_sep	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline#extensions#tabline#left_sep = ''$/;"	v
g:airline#extensions#tabline#left_sep	/home/gagarin/git/dotfiles/.vimrc	/^        let g:airline#extensions#tabline#left_sep = ' '$/;"	v
g:airline#extensions#tagbar#enabled	/home/gagarin/git/dotfiles/.vimrc	/^        let g:airline#extensions#tagbar#enabled = 1$/;"	v
g:airline#extensions#virtualenv#enabled	/home/gagarin/git/dotfiles/.vimrc	/^        let g:airline#extensions#virtualenv#enabled = 1$/;"	v
g:airline_left_alt_sep	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline_left_alt_sep      = '»'$/;"	v
g:airline_left_alt_sep	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline_left_alt_sep = ''$/;"	v
g:airline_left_sep	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline_left_sep          = '▶'$/;"	v
g:airline_left_sep	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline_left_sep = ''$/;"	v
g:airline_right_alt_sep	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline_right_alt_sep     = '«'$/;"	v
g:airline_right_alt_sep	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline_right_alt_sep = ''$/;"	v
g:airline_right_sep	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline_right_sep         = '◀'$/;"	v
g:airline_right_sep	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline_right_sep = ''$/;"	v
g:airline_skip_empty_sections	/home/gagarin/git/dotfiles/.vimrc	/^        let g:airline_skip_empty_sections = 1$/;"	v
g:airline_symbols	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline_symbols = {}$/;"	v
g:airline_symbols	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline_symbols.branch    = '⎇'$/;"	v
g:airline_symbols	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline_symbols.branch = ''$/;"	v
g:airline_symbols	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline_symbols.linenr    = '␊'$/;"	v
g:airline_symbols	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline_symbols.linenr = ''$/;"	v
g:airline_symbols	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline_symbols.paste     = 'Þ'$/;"	v
g:airline_symbols	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline_symbols.paste     = 'ρ'$/;"	v
g:airline_symbols	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline_symbols.paste     = '∥'$/;"	v
g:airline_symbols	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline_symbols.readonly = ''$/;"	v
g:airline_symbols	/home/gagarin/git/dotfiles/.vimrc	/^            let g:airline_symbols.whitespace = 'Ξ'$/;"	v
g:airline_theme	/home/gagarin/git/dotfiles/.vimrc	/^        let g:airline_theme='distinguished'$/;"	v
g:gitgutter_enabled	/home/gagarin/git/dotfiles/.vimrc	/^    let g:gitgutter_enabled = 1$/;"	v
g:grammarous#show_first_error	/home/gagarin/git/dotfiles/.vimrc	/^        let g:grammarous#show_first_error = 1$/;"	v
g:grammarous#use_vim_spelllang	/home/gagarin/git/dotfiles/.vimrc	/^        let g:grammarous#use_vim_spelllang = 1$/;"	v
g:gruvbox_italic	/home/gagarin/git/dotfiles/.vimrc	/^    let g:gruvbox_italic=1$/;"	v
g:gutentags_ctags_tagfile	/home/gagarin/git/dotfiles/.vimrc	/^    let g:gutentags_ctags_tagfile = '.tags'$/;"	v
g:gutentags_modules	/home/gagarin/git/dotfiles/.vimrc	/^    let g:gutentags_modules = ['ctags']$/;"	v
g:gutentags_project_root	/home/gagarin/git/dotfiles/.vimrc	/^    let g:gutentags_project_root = ['root.tex', 'rel.tex', 'pres.tex', '.prj_root']$/;"	v
g:gutetags_enabled	/home/gagarin/git/dotfiles/.vimrc	/^    let g:gutetags_enabled = 1$/;"	v
g:indentLine_char	/home/gagarin/git/dotfiles/.vimrc	/^    let g:indentLine_char = '┆'$/;"	v
g:indentLine_concealcursor	/home/gagarin/git/dotfiles/.vimrc	/^    let g:indentLine_concealcursor = "inc"$/;"	v
g:indentLine_concealcursor	/home/gagarin/git/dotfiles/.vimrc	/^    let g:indentLine_concealcursor = 0$/;"	v
g:indentLine_enabled	/home/gagarin/git/dotfiles/.vimrc	/^    let g:indentLine_enabled = 1$/;"	v
g:indentLine_faster	/home/gagarin/git/dotfiles/.vimrc	/^    let g:indentLine_faster = 1$/;"	v
g:instant_markdown_allow_unsafe_content	/home/gagarin/git/dotfiles/.vimrc	/^        let g:instant_markdown_allow_unsafe_content = 1$/;"	v
g:instant_markdown_autostart	/home/gagarin/git/dotfiles/.vimrc	/^        let g:instant_markdown_autostart = 0$/;"	v
g:instant_markdown_mathjax	/home/gagarin/git/dotfiles/.vimrc	/^        let g:instant_markdown_mathjax = 1$/;"	v
g:javascript_enable_domhtmlcss	/home/gagarin/git/dotfiles/.vimrc	/^        let g:javascript_enable_domhtmlcss = 1$/;"	v
g:languagetool_jar	/home/gagarin/git/dotfiles/.vimrc	/^        let g:languagetool_jar='~\/opt\/LanguageTool-4.4\/languagetool-commandline.jar'$/;"	v
g:languagetool_lang	/home/gagarin/git/dotfiles/.vimrc	/^        let g:languagetool_lang='en'$/;"	v
g:loaded_linuxsty	/home/gagarin/git/dotfiles/.vimrc	/^        let g:loaded_linuxsty=1$/;"	v
g:nerdtree_tabs_focus_on_files	/home/gagarin/git/dotfiles/.vimrc	/^        let g:nerdtree_tabs_focus_on_files=1$/;"	v
g:not_finish_vimplug	/home/gagarin/git/dotfiles/.vimrc	/^    let g:not_finish_vimplug = "yes"$/;"	v
g:polyglot_disabled	/home/gagarin/git/dotfiles/.vimrc	/^let g:polyglot_disabled = ['python','latex']$/;"	v
g:pymode	/home/gagarin/git/dotfiles/.vimrc	/^        let g:pymode=1$/;"	v
g:pymode_warnings	/home/gagarin/git/dotfiles/.vimrc	/^        let g:pymode_warnings = 1$/;"	v
g:session_autoload	/home/gagarin/git/dotfiles/.vimrc	/^    let g:session_autoload = 'no'$/;"	v
g:tagbar_autofocus	/home/gagarin/git/dotfiles/.vimrc	/^        let g:tagbar_autofocus = 1$/;"	v
g:vimwiki_list	/home/gagarin/git/dotfiles/.vimrc	/^        let g:vimwiki_list = [{'path': '~\/Dropbox\/vimwiki\/',$/;"	v
g:vista#renderer#enable_icon	/home/gagarin/git/dotfiles/.vimrc	/^    let g:vista#renderer#enable_icon = 1$/;"	v
g:vista_fzf_preview	/home/gagarin/git/dotfiles/.vimrc	/^    let g:vista_fzf_preview = ['right:50%']$/;"	v
gd	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <silent> gd <Plug>(coc-definition)$/;"	m
get_default_radix	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def get_default_radix():$/;"	m	class:Expressions
get_frame_lines	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def get_frame_lines(self, number, frame, selected=False):$/;"	m	class:Stack
get_modules	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def get_modules():$/;"	m	class:Dashboard
get_pc_line	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def get_pc_line(frame, style):$/;"	m	class:Stack
get_per_line	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def get_per_line(self, term_width):$/;"	m	class:Memory
get_term_size	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def get_term_size(fd=1):  # defaults to the main terminal$/;"	m	class:Dashboard
gi	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <silent> gi <Plug>(coc-implementation)$/;"	m
gitsigns.nvim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "gitsigns.nvim": { "branch": "main", "commit": "80214a857ce512cc64964abddc1d8eb5a3e28396" },$/;"	o
globals	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^                "globals": ["hs", "vim", "it", "describe", "before_each", "after_each"],$/;"	a	object:settings.Lua.diagnostics
gm	/home/gagarin/git/dotfiles/.vimrc	/^    map gm :call cursor(0, virtcol('$')\/2)<CR>$/;"	m
gr	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <silent> gr <Plug>(coc-references)$/;"	m
gray_244	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string gray_244       = "#928374";     \/\/ 244     " 146-131-116$/;"	v	namespace:gruvbox	typeref:typename:std::string
gray_245	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string gray_245       = "#928374";     \/\/ 245     " 146-131-116$/;"	v	namespace:gruvbox	typeref:typename:std::string
group_python	/home/gagarin/git/dotfiles/.vimrc	/^        augroup group_python$/;"	a
gruvbox	/home/gagarin/git/dotfiles/gruvbox.h	/^namespace gruvbox {$/;"	n
gruvbox.nvim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "gruvbox.nvim": { "branch": "main", "commit": "7a1b23e4edf73a39642e77508ee6b9cbb8c60f9e" },$/;"	o
guard_set_up_luarocks_dependency_missing	/home/gagarin/git/dotfiles/installer.lua	/^local function guard_set_up_luarocks_dependency_missing(dep)$/;"	f
gy	/home/gagarin/git/dotfiles/.vimrc	/^    nmap <silent> gy <Plug>(coc-type-definition)$/;"	m
handle_cursor_moved	/home/gagarin/git/dotfiles/.config/nvim/lua/config/plugins.lua	/^    function handle_cursor_moved()$/;"	f
handle_cursor_moved	/home/gagarin/git/dotfiles/lua/config/plugins.lua	/^    function handle_cursor_moved()$/;"	f
hookpost-down	/home/gagarin/git/dotfiles/gdb/.gdbinit	/^define hookpost-down$/;"	d
hookpost-frame	/home/gagarin/git/dotfiles/gdb/.gdbinit	/^define hookpost-frame$/;"	d
hookpost-up	/home/gagarin/git/dotfiles/gdb/.gdbinit	/^define hookpost-up$/;"	d
ic	/home/gagarin/git/dotfiles/.vimrc	/^    omap ic <Plug>(coc-classobj-i)$/;"	m
ic	/home/gagarin/git/dotfiles/.vimrc	/^    xmap ic <Plug>(coc-classobj-i)$/;"	m
if	/home/gagarin/git/dotfiles/.vimrc	/^    omap if <Plug>(coc-funcobj-i)$/;"	m
if	/home/gagarin/git/dotfiles/.vimrc	/^    xmap if <Plug>(coc-funcobj-i)$/;"	m
indent-blankline.nvim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "indent-blankline.nvim": { "branch": "master", "commit": "db926997af951da38e5004ec7b9fbdc480b4/;"	o
inferior_pid	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def inferior_pid(self):$/;"	m	class:Dashboard
init	/home/gagarin/git/dotfiles/.config/nvim/lua/config/lazy.lua	/^        init = function()$/;"	f
init	/home/gagarin/git/dotfiles/lua/config/lazy.lua	/^        init = function()$/;"	f
install	/home/gagarin/git/dotfiles/installer.lua	/^local function install()$/;"	f
invoke	/home/gagarin/git/dotfiles/gdb-dashboard/cpphelpr.py	/^    def invoke(self, arg, from_tty):$/;"	m	class:FancyLayoutCommand
invoke	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^                def invoke(self, arg, from_tty,$/;"	f	member:Dashboard.StyleCommand.add_styles	file:
invoke	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^            def invoke(self, arg, from_tty, info=self):$/;"	f	member:Dashboard.ModuleInfo.add_main_command	file:
invoke	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^            def invoke(self, arg, from_tty, info=self):$/;"	f	member:Dashboard.ModuleInfo.add_subcommand	file:
invoke	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def invoke(self, arg, from_tty):$/;"	m	class:Dashboard.ConfigurationCommand
invoke	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def invoke(self, arg, from_tty):$/;"	m	class:Dashboard.EnabledCommand
invoke	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def invoke(self, arg, from_tty):$/;"	m	class:Dashboard.LayoutCommand
invoke	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def invoke(self, arg, from_tty):$/;"	m	class:Dashboard.OutputCommand
invoke	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def invoke(self, arg, from_tty):$/;"	m	class:Dashboard.StyleCommand
invoke	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def invoke(self, arg, from_tty):$/;"	m	class:Dashboard
ios_version	/home/gagarin/git/dotfiles/settings.yml	/^        version: &ios_version$/;"	a
isOctave	/home/gagarin/git/dotfiles/startup.m	/^isOctave = exist('OCTAVE_VERSION', 'builtin') ~= 0;$/;"	v
is_running	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def is_running(self):$/;"	m	class:Dashboard
keymap	/home/gagarin/git/dotfiles/.config/nvim/lua/config/builtin_completion.lua	/^local function keymap(lhs, rhs, opts, mode)$/;"	f
keymap	/home/gagarin/git/dotfiles/lua/config/builtin_completion.lua	/^local function keymap(lhs, rhs, opts, mode)$/;"	f
keywordSnippet	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^                "keywordSnippet": "Disable"$/;"	s	object:settings.Lua.completion
label	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def label(self):$/;"	m	class:Dashboard.Module
label	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def label(self):$/;"	m	class:Assembly
label	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def label(self):$/;"	m	class:Breakpoints
label	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def label(self):$/;"	m	class:Expressions
label	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def label(self):$/;"	m	class:History
label	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def label(self):$/;"	m	class:Memory
label	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def label(self):$/;"	m	class:Registers
label	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def label(self):$/;"	m	class:Source
label	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def label(self):$/;"	m	class:Stack
label	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def label(self):$/;"	m	class:Threads
label	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def label(self):$/;"	m	class:Variables
layout	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def layout(self, directives):$/;"	m	class:Dashboard.LayoutCommand
lazy.nvim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "lazy.nvim": { "branch": "main", "commit": "077102c5bfc578693f12377846d427f49bc50076" },$/;"	o
library	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^                "library": [],$/;"	a	object:settings.Lua.workspace
libraryFiles	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^                "libraryFiles": "disable",$/;"	s	object:settings.Lua.diagnostics
light0	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string light0         = "#fbf1c7";     \/\/ 229     " 253-244-193$/;"	v	namespace:gruvbox	typeref:typename:std::string
light0_hard	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string light0_hard    = "#f9f5d7";     \/\/ 230     " 249-245-215$/;"	v	namespace:gruvbox	typeref:typename:std::string
light0_soft	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string light0_soft    = "#f2e5bc";     \/\/ 228     " 242-229-188$/;"	v	namespace:gruvbox	typeref:typename:std::string
light1	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string light1         = "#ebdbb2";     \/\/ 223     " 235-219-178$/;"	v	namespace:gruvbox	typeref:typename:std::string
light2	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string light2         = "#d5c4a1";     \/\/ 250     " 213-196-161$/;"	v	namespace:gruvbox	typeref:typename:std::string
light3	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string light3         = "#bdae93";     \/\/ 248     " 189-174-147$/;"	v	namespace:gruvbox	typeref:typename:std::string
light4	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string light4         = "#a89984";     \/\/ 246     " 168-153-132$/;"	v	namespace:gruvbox	typeref:typename:std::string
light4_256	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string light4_256     = "#a89984";     \/\/ 246     " 168-153-132$/;"	v	namespace:gruvbox	typeref:typename:std::string
lines	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def lines(self, term_width, term_height, style_changed):$/;"	m	class:Dashboard.Module
lines	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def lines(self, term_width, term_height, style_changed):$/;"	m	class:Assembly
lines	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def lines(self, term_width, term_height, style_changed):$/;"	m	class:Breakpoints
lines	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def lines(self, term_width, term_height, style_changed):$/;"	m	class:Expressions
lines	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def lines(self, term_width, term_height, style_changed):$/;"	m	class:History
lines	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def lines(self, term_width, term_height, style_changed):$/;"	m	class:Memory
lines	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def lines(self, term_width, term_height, style_changed):$/;"	m	class:Registers
lines	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def lines(self, term_width, term_height, style_changed):$/;"	m	class:Source
lines	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def lines(self, term_width, term_height, style_changed):$/;"	m	class:Stack
lines	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def lines(self, term_width, term_height, style_changed):$/;"	m	class:Threads
lines	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def lines(self, term_width, term_height, style_changed):$/;"	m	class:Variables
load_modules	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def load_modules(self, modules):$/;"	m	class:Dashboard
lua-utils.nvim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "lua-utils.nvim": { "branch": "main", "commit": "e565749421f4bbb5d2e85e37c3cef9d56553d8bd" },$/;"	o
maxPreload	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^                "maxPreload": 2000,$/;"	n	object:settings.Lua.workspace
my_next	/home/gagarin/git/dotfiles/.config/nvim/lua/config/settings.lua	/^function my_next()$/;"	f
my_next	/home/gagarin/git/dotfiles/lua/config/settings.lua	/^function my_next()$/;"	f
my_prev	/home/gagarin/git/dotfiles/.config/nvim/lua/config/settings.lua	/^function my_prev()$/;"	f
my_prev	/home/gagarin/git/dotfiles/lua/config/settings.lua	/^function my_prev()$/;"	f
mygroup	/home/gagarin/git/dotfiles/.vimrc	/^    augroup mygroup$/;"	a
name_formatter	/home/gagarin/git/dotfiles/.config/nvim/lua/config/toggle-term.lua	/^        name_formatter = function(term) --  term: Terminal$/;"	f
name_formatter	/home/gagarin/git/dotfiles/lua/config/toggle-term.lua	/^        name_formatter = function(term) --  term: Terminal$/;"	f
neogit	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "neogit": { "branch": "master", "commit": "6af8fc6b03210d0ac99398f8eff27c5be7b2ba8a" },$/;"	o
neorg	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "neorg": { "branch": "main", "commit": "81ee90cb2d72ac43bfadb7dd276646f34c8f85be" },$/;"	o
neutral_aqua	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string neutral_aqua   = "#689d6a";     \/\/ 72      " 104-157-106$/;"	v	namespace:gruvbox	typeref:typename:std::string
neutral_blue	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string neutral_blue   = "#458588";     \/\/ 66      " 69-133-136$/;"	v	namespace:gruvbox	typeref:typename:std::string
neutral_green	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string neutral_green  = "#98971a";     \/\/ 106     " 152-151-26$/;"	v	namespace:gruvbox	typeref:typename:std::string
neutral_orange	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string neutral_orange = "#d65d0e";     \/\/ 166     " 214-93-14$/;"	v	namespace:gruvbox	typeref:typename:std::string
neutral_purple	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string neutral_purple = "#b16286";     \/\/ 132     " 177-98-134$/;"	v	namespace:gruvbox	typeref:typename:std::string
neutral_red	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string neutral_red    = "#cc241d";     \/\/ 124     " 204-36-29$/;"	v	namespace:gruvbox	typeref:typename:std::string
neutral_yellow	/home/gagarin/git/dotfiles/gruvbox.h	/^    static constexpr std::string neutral_yellow = "#d79921";     \/\/ 172     " 215-153-33$/;"	v	namespace:gruvbox	typeref:typename:std::string
newFileDetection	/home/gagarin/git/dotfiles/.vimrc	/^    augroup newFileDetection$/;"	a
nonzero_return	/home/gagarin/git/dotfiles/.gitprompt.sh	/^function nonzero_return() {$/;"	f
notify_output	/home/gagarin/git/dotfiles/installer.lua	/^local function notify_output(msg, sc, level)$/;"	f
nui.nvim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nui.nvim": { "branch": "main", "commit": "61574ce6e60c815b0a0c4b5655b8486ba58089a1" },$/;"	o
nvim-config-local	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-config-local": { "branch": "main", "commit": "83bb6d9881653a5cf8b489ba8a6fe5a06049a10a" /;"	o
nvim-dap	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-dap": { "branch": "master", "commit": "281a2e4cd1e7a17cea7ecb1745d84a8ab1249925" },$/;"	o
nvim-dap-ui	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-dap-ui": { "branch": "master", "commit": "1c351e4e417d4691da12948b6ecf966936a56d28" },$/;"	o
nvim-nio	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-nio": { "branch": "master", "commit": "a428f309119086dc78dd4b19306d2d67be884eee" },$/;"	o
nvim-tree.lua	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-tree.lua": { "branch": "master", "commit": "ad0b95dee55955817af635fa121f6e2486b10583" },$/;"	o
nvim-treesitter	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-treesitter": { "branch": "master", "commit": "2eb50352c039009cf046f43241b649b162ee5148" /;"	o
nvim-treesitter-context	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-treesitter-context": { "branch": "master", "commit": "0f3332788e0bd37716fbd25f39120dcfd5/;"	o
nvim-treesitter-refactor	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-treesitter-refactor": { "branch": "master", "commit": "65ad2eca822dfaec2a3603119ec3cc882/;"	o
nvim-treesitter-textobjects	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-treesitter-textobjects": { "branch": "master", "commit": "41e3abf6bfd9a9a681eb1f788bdeba/;"	o
nvim-web-devicons	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "nvim-web-devicons": { "branch": "master", "commit": "3722e3d1fb5fe1896a104eb489e8f8651260b520/;"	o
obsidian.nvim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "obsidian.nvim": { "branch": "main", "commit": "ae1f76a75c7ce36866e1d9342a8f6f5b9c2caf9b" },$/;"	o
on_continue	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def on_continue(self, _):$/;"	m	class:Dashboard
on_exit	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def on_exit(self, _):$/;"	m	class:Dashboard
on_new_task	/home/gagarin/git/dotfiles/.config/nvim/lua/config/cmake-tools.lua	/^        on_new_task = function(task)$/;"	f
on_new_task	/home/gagarin/git/dotfiles/lua/config/cmake-tools.lua	/^        on_new_task = function(task)$/;"	f
on_stop	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def on_stop(self, _):$/;"	m	class:Dashboard
overseer.nvim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "overseer.nvim": { "branch": "master", "commit": "236e60cdac6410dd95ea5cecafdb801a304d6a41" },$/;"	o
parse_arg	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def parse_arg(arg):$/;"	m	class:Dashboard
parse_as_address	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def parse_as_address(expression):$/;"	m	class:Memory
parse_git_branch	/home/gagarin/git/dotfiles/.gitprompt.sh	/^function parse_git_branch() {$/;"	f
parse_git_status	/home/gagarin/git/dotfiles/.gitprompt.sh	/^function parse_git_status() {$/;"	f
parse_inits	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def parse_inits(python):$/;"	m	class:Dashboard
pathlib.nvim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "pathlib.nvim": { "branch": "main", "commit": "7a5a6facd29e306bc73a37719fa67c0d2226f852" },$/;"	o
pbitset	/home/gagarin/git/dotfiles/gdb/stl-views-1.0.3.gdb	/^define pbitset$/;"	d
pdequeue	/home/gagarin/git/dotfiles/gdb/stl-views-1.0.3.gdb	/^define pdequeue$/;"	d
pendulum-nvim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "pendulum-nvim": { "branch": "main", "commit": "0fa1a3abce852af9f12f948e8ebada25341e3872" },$/;"	o
pendulum.nvim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "pendulum.nvim": { "branch": "main", "commit": "b6b717dbc7dfb424cdd73e049f93a4c8d892a5d2" },$/;"	o
plenary.nvim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "plenary.nvim": { "branch": "master", "commit": "ec289423a1693aeae6cd0d503bac2856af74edaa" },$/;"	o
plist	/home/gagarin/git/dotfiles/gdb/stl-views-1.0.3.gdb	/^define plist$/;"	d
plist_member	/home/gagarin/git/dotfiles/gdb/stl-views-1.0.3.gdb	/^define plist_member$/;"	d
pmap	/home/gagarin/git/dotfiles/gdb/stl-views-1.0.3.gdb	/^define pmap$/;"	d
pmap_member	/home/gagarin/git/dotfiles/gdb/stl-views-1.0.3.gdb	/^define pmap_member$/;"	d
ppqueue	/home/gagarin/git/dotfiles/gdb/stl-views-1.0.3.gdb	/^define ppqueue$/;"	d
pqueue	/home/gagarin/git/dotfiles/gdb/stl-views-1.0.3.gdb	/^define pqueue$/;"	d
prefix	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^            def prefix(line):$/;"	f	member:Variables.format_frame	file:
preloadFileSize	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^                "preloadFileSize": 1000,$/;"	n	object:settings.Lua.workspace
print_git_status	/home/gagarin/git/dotfiles/.gitprompt.sh	/^function print_git_status() {$/;"	f
print_link	/home/gagarin/git/dotfiles/.config/nvim/lua/config/plugins.lua	/^function print_link(link)$/;"	f
print_link	/home/gagarin/git/dotfiles/lua/config/plugins.lua	/^function print_link(link)$/;"	f
process	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def process(self, source):$/;"	m	class:Beautifier
pset	/home/gagarin/git/dotfiles/gdb/stl-views-1.0.3.gdb	/^define pset$/;"	d
pstack	/home/gagarin/git/dotfiles/gdb/stl-views-1.0.3.gdb	/^define pstack$/;"	d
pstring	/home/gagarin/git/dotfiles/gdb/stl-views-1.0.3.gdb	/^define pstring$/;"	d
pumvisible	/home/gagarin/git/dotfiles/.config/nvim/lua/config/builtin_completion.lua	/^local function pumvisible()$/;"	f
pumvisible	/home/gagarin/git/dotfiles/lua/config/builtin_completion.lua	/^local function pumvisible()$/;"	f
pvector	/home/gagarin/git/dotfiles/gdb/stl-views-1.0.3.gdb	/^define pvector$/;"	d
pwstring	/home/gagarin/git/dotfiles/gdb/stl-views-1.0.3.gdb	/^define pwstring$/;"	d
python_highlight_all	/home/gagarin/git/dotfiles/.vimrc	/^        let python_highlight_all = 1$/;"	v
rainbow-delimiters.nvim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "rainbow-delimiters.nvim": { "branch": "master", "commit": "9f3d10e66a79e8975926f8cb930856e493/;"	o
redisplay	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def redisplay(self, style_changed=False):$/;"	m	class:Dashboard
remove_shell_color	/home/gagarin/git/dotfiles/installer.lua	/^    local function remove_shell_color(s)$/;"	f
render	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def render(self, clear_screen, style_changed=False):$/;"	m	class:Dashboard
reset	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def reset(self):$/;"	m	class:Dashboard.LayoutCommand
reset	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def reset(self):$/;"	m	class:Memory.Region
reset_ps1	/home/gagarin/git/dotfiles/.gitprompt.sh	/^function reset_ps1() {$/;"	f
reset_terminal	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def reset_terminal():$/;"	m	class:Dashboard
resize_ui	/home/gagarin/git/dotfiles/installer.lua	/^local function resize_ui()$/;"	f
run	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^def run(command):$/;"	f
runtime	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^            "runtime": {$/;"	o	object:settings.Lua
scroll	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def scroll(self, arg):$/;"	m	class:Assembly
scroll	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def scroll(self, arg):$/;"	m	class:Source
set_color	/home/gagarin/git/dotfiles/gruvbox.zsh	/^function set_color {$/;"	f
set_custom_prompt	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def set_custom_prompt(dashboard):$/;"	m	class:Dashboard
set_layout	/home/gagarin/git/dotfiles/gdb/.gdbinit	/^define set_layout$/;"	d
set_link	/home/gagarin/git/dotfiles/.config/nvim/lua/config/plugins.lua	/^function set_link(buf, links)$/;"	f
set_link	/home/gagarin/git/dotfiles/lua/config/plugins.lua	/^function set_link(buf, links)$/;"	f
set_up_luarocks	/home/gagarin/git/dotfiles/installer.lua	/^local function set_up_luarocks(install_path)$/;"	f
settings	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^    "settings": {$/;"	o
setup_cursor_moved_autocmd	/home/gagarin/git/dotfiles/.config/nvim/lua/config/plugins.lua	/^function setup_cursor_moved_autocmd(links)$/;"	f
setup_cursor_moved_autocmd	/home/gagarin/git/dotfiles/lua/config/plugins.lua	/^function setup_cursor_moved_autocmd(links)$/;"	f
setup_terminal	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def setup_terminal():$/;"	m	class:Dashboard
show	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^        def show(self):$/;"	m	class:Dashboard.LayoutCommand
size	/home/gagarin/git/dotfiles/.config/nvim/lua/config/toggle-term.lua	/^      size = 20--[[ | function(term)$/;"	f
size	/home/gagarin/git/dotfiles/lua/config/toggle-term.lua	/^      size = 20--[[ | function(term)$/;"	f
sprint	/home/gagarin/git/dotfiles/gdb/.gdbinit	/^define sprint$/;"	d
start	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def start():$/;"	m	class:Dashboard
style fg	/home/gagarin/git/dotfiles/.tmux.conf	/^set-window-option -g window-status-bell-style fg=colour235,bg=colour167 #bg, red$/;"	k
tagbar	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "tagbar": { "branch": "master", "commit": "d55d454bd3d5b027ebf0e8c75b8f88e4eddad8d8" },$/;"	o
tcomment_vim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "tcomment_vim": { "branch": "master", "commit": "48ab639a461d9b8344f7fee06cb69b4374863b13" },$/;"	o
telescope.nvim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "telescope.nvim": { "branch": "master", "commit": "5972437de807c3bc101565175da66a1aa4f8707a" }/;"	o
test_status	/home/gagarin/git/dotfiles/.gitprompt.sh	/^function test_status() {$/;"	f
to_string	/home/gagarin/git/dotfiles/gdb/arma.py	/^    def to_string(self):$/;"	m	class:MatPrinter
to_string	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^def to_string(value):$/;"	f
to_string	/home/gagarin/git/dotfiles/gdb/gdb_arma.py	/^    def to_string(self):$/;"	m	class:MatPrinter
to_unsigned	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^def to_unsigned(value, size=8):$/;"	f
toggle_tree	/home/gagarin/git/dotfiles/.config/nvim/lua/config/settings.lua	/^function toggle_tree()$/;"	f
toggle_tree	/home/gagarin/git/dotfiles/lua/config/settings.lua	/^function toggle_tree()$/;"	f
toggleterm.nvim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "toggleterm.nvim": { "branch": "main", "commit": "48be57eaba817f038d61bbf64d2c597f578c0827" },$/;"	o
trouble.nvim	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "trouble.nvim": { "branch": "main", "commit": "6efc446226679fda0547c0fd6a7892fd5f5b15d8" },$/;"	o
ultisnips	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "ultisnips": { "branch": "master", "commit": "49dc8cb2086db19d385791c8e1635723b0fd95c7" },$/;"	o
undotree	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "undotree": { "branch": "master", "commit": "56c684a805fe948936cda0d1b19505b84ad7e065" },$/;"	o
unwatch	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def unwatch(self, arg):$/;"	m	class:Expressions
unwatch	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def unwatch(self, arg):$/;"	m	class:Memory
version	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^                "version": "LuaJIT"$/;"	s	object:settings.Lua.runtime
vim-airline	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-airline": { "branch": "master", "commit": "d25c049e617775eb2eb26c580e5dec591c94d480" },$/;"	o
vim-airline-themes	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-airline-themes": { "branch": "master", "commit": "a9aa25ce323b2dd04a52706f4d1b044f4feb761/;"	o
vim-cpp-enhanced-highlight	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-cpp-enhanced-highlight": { "branch": "master", "commit": "4b7314a497ea2dd0a6911ccb94ce83b/;"	o
vim-cpp-modern	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-cpp-modern": { "branch": "master", "commit": "6916d2a08c736f806a33cba7752a449ef530549e" }/;"	o
vim-easy-align	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-easy-align": { "branch": "master", "commit": "9815a55dbcd817784458df7a18acacc6f82b1241" }/;"	o
vim-fugitive	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-fugitive": { "branch": "master", "commit": "0444df68cd1cdabc7453d6bd84099458327e5513" },$/;"	o
vim-grepper	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-grepper": { "branch": "master", "commit": "485d349125d46f2788833ecb43df7a14c46706f6" },$/;"	o
vim-gutentags	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-gutentags": { "branch": "master", "commit": "aa47c5e29c37c52176c44e61c780032dfacef3dd" },$/;"	o
vim-repeat	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-repeat": { "branch": "master", "commit": "65846025c15494983dafe5e3b46c8f88ab2e9635" },$/;"	o
vim-snippets	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-snippets": { "branch": "master", "commit": "f0a3184d9f90b96b044d5914625a25c554d7f301" },$/;"	o
vim-surround	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vim-surround": { "branch": "master", "commit": "3d188ed2113431cf8dac77be61b842acb64433d9" },$/;"	o
vimplug_exists	/home/gagarin/git/dotfiles/.vimrc	/^let vimplug_exists=expand('~\/.config\/nvim\/autoload\/plug.vim')$/;"	v
vimrc	/home/gagarin/git/dotfiles/.vimrc	/^        augroup vimrc-javascript$/;"	a
vimrc	/home/gagarin/git/dotfiles/.vimrc	/^        augroup vimrc-make-cmake$/;"	a
vimspector	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vimspector": { "branch": "master", "commit": "af13695a11816c73b92d76fd8721296907224f1d" },$/;"	o
vimtex	/home/gagarin/git/dotfiles/.config/nvim/lazy-lock.json	/^  "vimtex": { "branch": "master", "commit": "76ef99f73a5ff10be59836a4af4f928eaa8ad284" }$/;"	o
w!!	/home/gagarin/git/dotfiles/.vimrc	/^    cmap w!! w !sudo tee % >\/dev\/null$/;"	m
watch	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def watch(self, arg):$/;"	m	class:Expressions
watch	/home/gagarin/git/dotfiles/gdb/dashboard.py	/^    def watch(self, arg):$/;"	m	class:Memory
workspace	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^            "workspace": {$/;"	o	object:settings.Lua
workspaceEvent	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^                "workspaceEvent": "none",$/;"	s	object:settings.Lua.diagnostics
workspaceRate	/home/gagarin/git/dotfiles/.config/nvim/coc-settings.json	/^                "workspaceRate": 0,$/;"	n	object:settings.Lua.diagnostics
xml_grp	/home/gagarin/git/dotfiles/.vimrc	/^        augroup xml_grp$/;"	a
çd	/home/gagarin/git/dotfiles/.vimrc	/^    noremap çd :cd %:p:h$/;"	m
çl	/home/gagarin/git/dotfiles/.vimrc	/^    noremap çl :lcd %:p:h$/;"	m
